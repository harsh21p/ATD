// Generated by view binder compiler. Do not edit!
package com.atd.atdmobileapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.atd.atdmobileapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogDateRangeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ProductSearchButtonsBinding buttons;

  @NonNull
  public final TextView tvDateRange;

  @NonNull
  public final TextView tvEndDate;

  @NonNull
  public final TextView tvEndDatevalue;

  @NonNull
  public final TextView tvErrorMessage;

  @NonNull
  public final TextView tvStartDate;

  @NonNull
  public final TextView tvStartDateValue;

  private DialogDateRangeBinding(@NonNull ConstraintLayout rootView,
      @NonNull ProductSearchButtonsBinding buttons, @NonNull TextView tvDateRange,
      @NonNull TextView tvEndDate, @NonNull TextView tvEndDatevalue,
      @NonNull TextView tvErrorMessage, @NonNull TextView tvStartDate,
      @NonNull TextView tvStartDateValue) {
    this.rootView = rootView;
    this.buttons = buttons;
    this.tvDateRange = tvDateRange;
    this.tvEndDate = tvEndDate;
    this.tvEndDatevalue = tvEndDatevalue;
    this.tvErrorMessage = tvErrorMessage;
    this.tvStartDate = tvStartDate;
    this.tvStartDateValue = tvStartDateValue;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogDateRangeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogDateRangeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_date_range, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogDateRangeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttons;
      View buttons = ViewBindings.findChildViewById(rootView, id);
      if (buttons == null) {
        break missingId;
      }
      ProductSearchButtonsBinding binding_buttons = ProductSearchButtonsBinding.bind(buttons);

      id = R.id.tvDateRange;
      TextView tvDateRange = ViewBindings.findChildViewById(rootView, id);
      if (tvDateRange == null) {
        break missingId;
      }

      id = R.id.tvEndDate;
      TextView tvEndDate = ViewBindings.findChildViewById(rootView, id);
      if (tvEndDate == null) {
        break missingId;
      }

      id = R.id.tvEndDatevalue;
      TextView tvEndDatevalue = ViewBindings.findChildViewById(rootView, id);
      if (tvEndDatevalue == null) {
        break missingId;
      }

      id = R.id.tvErrorMessage;
      TextView tvErrorMessage = ViewBindings.findChildViewById(rootView, id);
      if (tvErrorMessage == null) {
        break missingId;
      }

      id = R.id.tvStartDate;
      TextView tvStartDate = ViewBindings.findChildViewById(rootView, id);
      if (tvStartDate == null) {
        break missingId;
      }

      id = R.id.tvStartDateValue;
      TextView tvStartDateValue = ViewBindings.findChildViewById(rootView, id);
      if (tvStartDateValue == null) {
        break missingId;
      }

      return new DialogDateRangeBinding((ConstraintLayout) rootView, binding_buttons, tvDateRange,
          tvEndDate, tvEndDatevalue, tvErrorMessage, tvStartDate, tvStartDateValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
