// Generated by view binder compiler. Do not edit!
package com.atd.atdmobileapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.atd.atdmobileapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLicencePlateBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View devider1;

  @NonNull
  public final EditText etLicencePlate;

  @NonNull
  public final TextView etState;

  @NonNull
  public final ImageView ivLicencePlate;

  @NonNull
  public final ImageView ivState;

  @NonNull
  public final TextView noResultTv1;

  @NonNull
  public final TextView noResultTv2;

  @NonNull
  public final ProgressBar progressbar;

  @NonNull
  public final TextView tvLicencePlate;

  @NonNull
  public final TextView tvSearch;

  @NonNull
  public final TextView tvState;

  private FragmentLicencePlateBinding(@NonNull ConstraintLayout rootView, @NonNull View devider1,
      @NonNull EditText etLicencePlate, @NonNull TextView etState,
      @NonNull ImageView ivLicencePlate, @NonNull ImageView ivState, @NonNull TextView noResultTv1,
      @NonNull TextView noResultTv2, @NonNull ProgressBar progressbar,
      @NonNull TextView tvLicencePlate, @NonNull TextView tvSearch, @NonNull TextView tvState) {
    this.rootView = rootView;
    this.devider1 = devider1;
    this.etLicencePlate = etLicencePlate;
    this.etState = etState;
    this.ivLicencePlate = ivLicencePlate;
    this.ivState = ivState;
    this.noResultTv1 = noResultTv1;
    this.noResultTv2 = noResultTv2;
    this.progressbar = progressbar;
    this.tvLicencePlate = tvLicencePlate;
    this.tvSearch = tvSearch;
    this.tvState = tvState;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLicencePlateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLicencePlateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_licence_plate, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLicencePlateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.devider1;
      View devider1 = ViewBindings.findChildViewById(rootView, id);
      if (devider1 == null) {
        break missingId;
      }

      id = R.id.etLicencePlate;
      EditText etLicencePlate = ViewBindings.findChildViewById(rootView, id);
      if (etLicencePlate == null) {
        break missingId;
      }

      id = R.id.etState;
      TextView etState = ViewBindings.findChildViewById(rootView, id);
      if (etState == null) {
        break missingId;
      }

      id = R.id.ivLicencePlate;
      ImageView ivLicencePlate = ViewBindings.findChildViewById(rootView, id);
      if (ivLicencePlate == null) {
        break missingId;
      }

      id = R.id.ivState;
      ImageView ivState = ViewBindings.findChildViewById(rootView, id);
      if (ivState == null) {
        break missingId;
      }

      id = R.id.noResultTv1;
      TextView noResultTv1 = ViewBindings.findChildViewById(rootView, id);
      if (noResultTv1 == null) {
        break missingId;
      }

      id = R.id.noResultTv2;
      TextView noResultTv2 = ViewBindings.findChildViewById(rootView, id);
      if (noResultTv2 == null) {
        break missingId;
      }

      id = R.id.progressbar;
      ProgressBar progressbar = ViewBindings.findChildViewById(rootView, id);
      if (progressbar == null) {
        break missingId;
      }

      id = R.id.tvLicencePlate;
      TextView tvLicencePlate = ViewBindings.findChildViewById(rootView, id);
      if (tvLicencePlate == null) {
        break missingId;
      }

      id = R.id.tvSearch;
      TextView tvSearch = ViewBindings.findChildViewById(rootView, id);
      if (tvSearch == null) {
        break missingId;
      }

      id = R.id.tvState;
      TextView tvState = ViewBindings.findChildViewById(rootView, id);
      if (tvState == null) {
        break missingId;
      }

      return new FragmentLicencePlateBinding((ConstraintLayout) rootView, devider1, etLicencePlate,
          etState, ivLicencePlate, ivState, noResultTv1, noResultTv2, progressbar, tvLicencePlate,
          tvSearch, tvState);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
