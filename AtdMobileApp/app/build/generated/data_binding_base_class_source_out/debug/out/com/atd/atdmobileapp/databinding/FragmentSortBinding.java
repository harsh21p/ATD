// Generated by view binder compiler. Do not edit!
package com.atd.atdmobileapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.atd.atdmobileapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSortBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView applySort;

  @NonNull
  public final RelativeLayout bottomFrame;

  @NonNull
  public final ImageView ivCloseTireType;

  @NonNull
  public final RecyclerView rvSort;

  @NonNull
  public final LinearLayoutCompat tireTypesHeader;

  @NonNull
  public final TextView tvBrands;

  @NonNull
  public final View viewBottom;

  @NonNull
  public final View viewSelectLocation;

  private FragmentSortBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView applySort,
      @NonNull RelativeLayout bottomFrame, @NonNull ImageView ivCloseTireType,
      @NonNull RecyclerView rvSort, @NonNull LinearLayoutCompat tireTypesHeader,
      @NonNull TextView tvBrands, @NonNull View viewBottom, @NonNull View viewSelectLocation) {
    this.rootView = rootView;
    this.applySort = applySort;
    this.bottomFrame = bottomFrame;
    this.ivCloseTireType = ivCloseTireType;
    this.rvSort = rvSort;
    this.tireTypesHeader = tireTypesHeader;
    this.tvBrands = tvBrands;
    this.viewBottom = viewBottom;
    this.viewSelectLocation = viewSelectLocation;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSortBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSortBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_sort, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSortBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.applySort;
      ImageView applySort = ViewBindings.findChildViewById(rootView, id);
      if (applySort == null) {
        break missingId;
      }

      id = R.id.bottomFrame;
      RelativeLayout bottomFrame = ViewBindings.findChildViewById(rootView, id);
      if (bottomFrame == null) {
        break missingId;
      }

      id = R.id.ivCloseTireType;
      ImageView ivCloseTireType = ViewBindings.findChildViewById(rootView, id);
      if (ivCloseTireType == null) {
        break missingId;
      }

      id = R.id.rvSort;
      RecyclerView rvSort = ViewBindings.findChildViewById(rootView, id);
      if (rvSort == null) {
        break missingId;
      }

      id = R.id.tireTypesHeader;
      LinearLayoutCompat tireTypesHeader = ViewBindings.findChildViewById(rootView, id);
      if (tireTypesHeader == null) {
        break missingId;
      }

      id = R.id.tvBrands;
      TextView tvBrands = ViewBindings.findChildViewById(rootView, id);
      if (tvBrands == null) {
        break missingId;
      }

      id = R.id.viewBottom;
      View viewBottom = ViewBindings.findChildViewById(rootView, id);
      if (viewBottom == null) {
        break missingId;
      }

      id = R.id.viewSelectLocation;
      View viewSelectLocation = ViewBindings.findChildViewById(rootView, id);
      if (viewSelectLocation == null) {
        break missingId;
      }

      return new FragmentSortBinding((ConstraintLayout) rootView, applySort, bottomFrame,
          ivCloseTireType, rvSort, tireTypesHeader, tvBrands, viewBottom, viewSelectLocation);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
