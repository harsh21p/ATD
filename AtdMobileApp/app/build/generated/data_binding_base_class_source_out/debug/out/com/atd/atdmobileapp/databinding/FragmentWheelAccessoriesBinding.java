// Generated by view binder compiler. Do not edit!
package com.atd.atdmobileapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.atd.atdmobileapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentWheelAccessoriesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ProductSearchFooterBinding bottomButtons;

  @NonNull
  public final FrameLayout forFooter;

  @NonNull
  public final TextView tvWheelAccType;

  @NonNull
  public final ImageView wheelAccBrandDropMenu;

  @NonNull
  public final ImageView wheelAccDropMenu;

  @NonNull
  public final TextView wheelAccType;

  @NonNull
  public final TextView wheelAccatdPartNumber;

  @NonNull
  public final EditText wheelAccatdPartNumberHint;

  @NonNull
  public final TextView wheelAccbrands;

  @NonNull
  public final TextView wheelAccbrandsHint;

  @NonNull
  public final EditText wheelAccsupplierHint;

  @NonNull
  public final TextView wheelAccsupplierName;

  @NonNull
  public final TextView wheelAcctvInst;

  @NonNull
  public final View wheelAccviewDivider2;

  @NonNull
  public final View wheelAccviewDivider4;

  @NonNull
  public final View wheelAccviewDivider7;

  @NonNull
  public final View wheelAccviewDivider8;

  private FragmentWheelAccessoriesBinding(@NonNull ConstraintLayout rootView,
      @NonNull ProductSearchFooterBinding bottomButtons, @NonNull FrameLayout forFooter,
      @NonNull TextView tvWheelAccType, @NonNull ImageView wheelAccBrandDropMenu,
      @NonNull ImageView wheelAccDropMenu, @NonNull TextView wheelAccType,
      @NonNull TextView wheelAccatdPartNumber, @NonNull EditText wheelAccatdPartNumberHint,
      @NonNull TextView wheelAccbrands, @NonNull TextView wheelAccbrandsHint,
      @NonNull EditText wheelAccsupplierHint, @NonNull TextView wheelAccsupplierName,
      @NonNull TextView wheelAcctvInst, @NonNull View wheelAccviewDivider2,
      @NonNull View wheelAccviewDivider4, @NonNull View wheelAccviewDivider7,
      @NonNull View wheelAccviewDivider8) {
    this.rootView = rootView;
    this.bottomButtons = bottomButtons;
    this.forFooter = forFooter;
    this.tvWheelAccType = tvWheelAccType;
    this.wheelAccBrandDropMenu = wheelAccBrandDropMenu;
    this.wheelAccDropMenu = wheelAccDropMenu;
    this.wheelAccType = wheelAccType;
    this.wheelAccatdPartNumber = wheelAccatdPartNumber;
    this.wheelAccatdPartNumberHint = wheelAccatdPartNumberHint;
    this.wheelAccbrands = wheelAccbrands;
    this.wheelAccbrandsHint = wheelAccbrandsHint;
    this.wheelAccsupplierHint = wheelAccsupplierHint;
    this.wheelAccsupplierName = wheelAccsupplierName;
    this.wheelAcctvInst = wheelAcctvInst;
    this.wheelAccviewDivider2 = wheelAccviewDivider2;
    this.wheelAccviewDivider4 = wheelAccviewDivider4;
    this.wheelAccviewDivider7 = wheelAccviewDivider7;
    this.wheelAccviewDivider8 = wheelAccviewDivider8;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWheelAccessoriesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWheelAccessoriesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_wheel_accessories, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWheelAccessoriesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomButtons;
      View bottomButtons = ViewBindings.findChildViewById(rootView, id);
      if (bottomButtons == null) {
        break missingId;
      }
      ProductSearchFooterBinding binding_bottomButtons = ProductSearchFooterBinding.bind(bottomButtons);

      id = R.id.forFooter;
      FrameLayout forFooter = ViewBindings.findChildViewById(rootView, id);
      if (forFooter == null) {
        break missingId;
      }

      id = R.id.tvWheelAccType;
      TextView tvWheelAccType = ViewBindings.findChildViewById(rootView, id);
      if (tvWheelAccType == null) {
        break missingId;
      }

      id = R.id.wheelAccBrandDropMenu;
      ImageView wheelAccBrandDropMenu = ViewBindings.findChildViewById(rootView, id);
      if (wheelAccBrandDropMenu == null) {
        break missingId;
      }

      id = R.id.wheelAccDropMenu;
      ImageView wheelAccDropMenu = ViewBindings.findChildViewById(rootView, id);
      if (wheelAccDropMenu == null) {
        break missingId;
      }

      id = R.id.wheelAccType;
      TextView wheelAccType = ViewBindings.findChildViewById(rootView, id);
      if (wheelAccType == null) {
        break missingId;
      }

      id = R.id.wheelAccatdPartNumber;
      TextView wheelAccatdPartNumber = ViewBindings.findChildViewById(rootView, id);
      if (wheelAccatdPartNumber == null) {
        break missingId;
      }

      id = R.id.wheelAccatdPartNumberHint;
      EditText wheelAccatdPartNumberHint = ViewBindings.findChildViewById(rootView, id);
      if (wheelAccatdPartNumberHint == null) {
        break missingId;
      }

      id = R.id.wheelAccbrands;
      TextView wheelAccbrands = ViewBindings.findChildViewById(rootView, id);
      if (wheelAccbrands == null) {
        break missingId;
      }

      id = R.id.wheelAccbrandsHint;
      TextView wheelAccbrandsHint = ViewBindings.findChildViewById(rootView, id);
      if (wheelAccbrandsHint == null) {
        break missingId;
      }

      id = R.id.wheelAccsupplierHint;
      EditText wheelAccsupplierHint = ViewBindings.findChildViewById(rootView, id);
      if (wheelAccsupplierHint == null) {
        break missingId;
      }

      id = R.id.wheelAccsupplierName;
      TextView wheelAccsupplierName = ViewBindings.findChildViewById(rootView, id);
      if (wheelAccsupplierName == null) {
        break missingId;
      }

      id = R.id.wheelAcctvInst;
      TextView wheelAcctvInst = ViewBindings.findChildViewById(rootView, id);
      if (wheelAcctvInst == null) {
        break missingId;
      }

      id = R.id.wheelAccviewDivider2;
      View wheelAccviewDivider2 = ViewBindings.findChildViewById(rootView, id);
      if (wheelAccviewDivider2 == null) {
        break missingId;
      }

      id = R.id.wheelAccviewDivider4;
      View wheelAccviewDivider4 = ViewBindings.findChildViewById(rootView, id);
      if (wheelAccviewDivider4 == null) {
        break missingId;
      }

      id = R.id.wheelAccviewDivider7;
      View wheelAccviewDivider7 = ViewBindings.findChildViewById(rootView, id);
      if (wheelAccviewDivider7 == null) {
        break missingId;
      }

      id = R.id.wheelAccviewDivider8;
      View wheelAccviewDivider8 = ViewBindings.findChildViewById(rootView, id);
      if (wheelAccviewDivider8 == null) {
        break missingId;
      }

      return new FragmentWheelAccessoriesBinding((ConstraintLayout) rootView, binding_bottomButtons,
          forFooter, tvWheelAccType, wheelAccBrandDropMenu, wheelAccDropMenu, wheelAccType,
          wheelAccatdPartNumber, wheelAccatdPartNumberHint, wheelAccbrands, wheelAccbrandsHint,
          wheelAccsupplierHint, wheelAccsupplierName, wheelAcctvInst, wheelAccviewDivider2,
          wheelAccviewDivider4, wheelAccviewDivider7, wheelAccviewDivider8);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
