// Generated by view binder compiler. Do not edit!
package com.atd.atdmobileapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.atd.atdmobileapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PickupLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ivClose;

  @NonNull
  public final TextView tvCancel;

  @NonNull
  public final TextView tvConfirm;

  @NonNull
  public final TextView tvHeader;

  @NonNull
  public final TextView tvMessage;

  @NonNull
  public final View viewSeparator;

  @NonNull
  public final View viewSeparatorMain;

  private PickupLayoutBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView ivClose,
      @NonNull TextView tvCancel, @NonNull TextView tvConfirm, @NonNull TextView tvHeader,
      @NonNull TextView tvMessage, @NonNull View viewSeparator, @NonNull View viewSeparatorMain) {
    this.rootView = rootView;
    this.ivClose = ivClose;
    this.tvCancel = tvCancel;
    this.tvConfirm = tvConfirm;
    this.tvHeader = tvHeader;
    this.tvMessage = tvMessage;
    this.viewSeparator = viewSeparator;
    this.viewSeparatorMain = viewSeparatorMain;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PickupLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PickupLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.pickup_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PickupLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivClose;
      ImageView ivClose = ViewBindings.findChildViewById(rootView, id);
      if (ivClose == null) {
        break missingId;
      }

      id = R.id.tvCancel;
      TextView tvCancel = ViewBindings.findChildViewById(rootView, id);
      if (tvCancel == null) {
        break missingId;
      }

      id = R.id.tvConfirm;
      TextView tvConfirm = ViewBindings.findChildViewById(rootView, id);
      if (tvConfirm == null) {
        break missingId;
      }

      id = R.id.tvHeader;
      TextView tvHeader = ViewBindings.findChildViewById(rootView, id);
      if (tvHeader == null) {
        break missingId;
      }

      id = R.id.tvMessage;
      TextView tvMessage = ViewBindings.findChildViewById(rootView, id);
      if (tvMessage == null) {
        break missingId;
      }

      id = R.id.viewSeparator;
      View viewSeparator = ViewBindings.findChildViewById(rootView, id);
      if (viewSeparator == null) {
        break missingId;
      }

      id = R.id.viewSeparatorMain;
      View viewSeparatorMain = ViewBindings.findChildViewById(rootView, id);
      if (viewSeparatorMain == null) {
        break missingId;
      }

      return new PickupLayoutBinding((ConstraintLayout) rootView, ivClose, tvCancel, tvConfirm,
          tvHeader, tvMessage, viewSeparator, viewSeparatorMain);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
