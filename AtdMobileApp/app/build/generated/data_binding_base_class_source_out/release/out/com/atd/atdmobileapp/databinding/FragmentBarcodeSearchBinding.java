// Generated by view binder compiler. Do not edit!
package com.atd.atdmobileapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.atd.atdmobileapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBarcodeSearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText etBarcode;

  @NonNull
  public final ImageView ivBarCode;

  @NonNull
  public final ProgressBar progressbar;

  @NonNull
  public final TextView tvSearch;

  @NonNull
  public final TextView tvVin;

  private FragmentBarcodeSearchBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText etBarcode, @NonNull ImageView ivBarCode, @NonNull ProgressBar progressbar,
      @NonNull TextView tvSearch, @NonNull TextView tvVin) {
    this.rootView = rootView;
    this.etBarcode = etBarcode;
    this.ivBarCode = ivBarCode;
    this.progressbar = progressbar;
    this.tvSearch = tvSearch;
    this.tvVin = tvVin;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBarcodeSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBarcodeSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_barcode_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBarcodeSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.etBarcode;
      EditText etBarcode = ViewBindings.findChildViewById(rootView, id);
      if (etBarcode == null) {
        break missingId;
      }

      id = R.id.ivBarCode;
      ImageView ivBarCode = ViewBindings.findChildViewById(rootView, id);
      if (ivBarCode == null) {
        break missingId;
      }

      id = R.id.progressbar;
      ProgressBar progressbar = ViewBindings.findChildViewById(rootView, id);
      if (progressbar == null) {
        break missingId;
      }

      id = R.id.tvSearch;
      TextView tvSearch = ViewBindings.findChildViewById(rootView, id);
      if (tvSearch == null) {
        break missingId;
      }

      id = R.id.tvVin;
      TextView tvVin = ViewBindings.findChildViewById(rootView, id);
      if (tvVin == null) {
        break missingId;
      }

      return new FragmentBarcodeSearchBinding((ConstraintLayout) rootView, etBarcode, ivBarCode,
          progressbar, tvSearch, tvVin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
