// Generated by view binder compiler. Do not edit!
package com.atd.atdmobileapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.atd.atdmobileapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMyOrdersSearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ivKeywordSearch;

  @NonNull
  public final ImageView ivMicSearch;

  @NonNull
  public final ImageView ivNoOrders;

  @NonNull
  public final LinearLayout llSearchOptions;

  @NonNull
  public final TextView noData;

  @NonNull
  public final TextView noData2;

  @NonNull
  public final ProgressBar progressbar;

  @NonNull
  public final RelativeLayout rlSearch;

  @NonNull
  public final LinearLayout rlSearchDates;

  @NonNull
  public final RecyclerView rvMyOrders;

  @NonNull
  public final TextView tvDateRange;

  @NonNull
  public final EditText tvKeywordSearch;

  @NonNull
  public final TextView tvLast30Days;

  @NonNull
  public final TextView tvLast7Days;

  @NonNull
  public final TextView tvLast90Days;

  @NonNull
  public final TextView tvOrdersPlaces;

  @NonNull
  public final TextView tvOrdersPlacesList;

  @NonNull
  public final TextView tvSearch;

  @NonNull
  public final TextView tvShopForProducts;

  @NonNull
  public final LinearLayout voiceLL;

  private FragmentMyOrdersSearchBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView ivKeywordSearch, @NonNull ImageView ivMicSearch,
      @NonNull ImageView ivNoOrders, @NonNull LinearLayout llSearchOptions,
      @NonNull TextView noData, @NonNull TextView noData2, @NonNull ProgressBar progressbar,
      @NonNull RelativeLayout rlSearch, @NonNull LinearLayout rlSearchDates,
      @NonNull RecyclerView rvMyOrders, @NonNull TextView tvDateRange,
      @NonNull EditText tvKeywordSearch, @NonNull TextView tvLast30Days,
      @NonNull TextView tvLast7Days, @NonNull TextView tvLast90Days,
      @NonNull TextView tvOrdersPlaces, @NonNull TextView tvOrdersPlacesList,
      @NonNull TextView tvSearch, @NonNull TextView tvShopForProducts,
      @NonNull LinearLayout voiceLL) {
    this.rootView = rootView;
    this.ivKeywordSearch = ivKeywordSearch;
    this.ivMicSearch = ivMicSearch;
    this.ivNoOrders = ivNoOrders;
    this.llSearchOptions = llSearchOptions;
    this.noData = noData;
    this.noData2 = noData2;
    this.progressbar = progressbar;
    this.rlSearch = rlSearch;
    this.rlSearchDates = rlSearchDates;
    this.rvMyOrders = rvMyOrders;
    this.tvDateRange = tvDateRange;
    this.tvKeywordSearch = tvKeywordSearch;
    this.tvLast30Days = tvLast30Days;
    this.tvLast7Days = tvLast7Days;
    this.tvLast90Days = tvLast90Days;
    this.tvOrdersPlaces = tvOrdersPlaces;
    this.tvOrdersPlacesList = tvOrdersPlacesList;
    this.tvSearch = tvSearch;
    this.tvShopForProducts = tvShopForProducts;
    this.voiceLL = voiceLL;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMyOrdersSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMyOrdersSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_my_orders_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMyOrdersSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivKeywordSearch;
      ImageView ivKeywordSearch = ViewBindings.findChildViewById(rootView, id);
      if (ivKeywordSearch == null) {
        break missingId;
      }

      id = R.id.ivMicSearch;
      ImageView ivMicSearch = ViewBindings.findChildViewById(rootView, id);
      if (ivMicSearch == null) {
        break missingId;
      }

      id = R.id.ivNoOrders;
      ImageView ivNoOrders = ViewBindings.findChildViewById(rootView, id);
      if (ivNoOrders == null) {
        break missingId;
      }

      id = R.id.llSearchOptions;
      LinearLayout llSearchOptions = ViewBindings.findChildViewById(rootView, id);
      if (llSearchOptions == null) {
        break missingId;
      }

      id = R.id.noData;
      TextView noData = ViewBindings.findChildViewById(rootView, id);
      if (noData == null) {
        break missingId;
      }

      id = R.id.noData2;
      TextView noData2 = ViewBindings.findChildViewById(rootView, id);
      if (noData2 == null) {
        break missingId;
      }

      id = R.id.progressbar;
      ProgressBar progressbar = ViewBindings.findChildViewById(rootView, id);
      if (progressbar == null) {
        break missingId;
      }

      id = R.id.rlSearch;
      RelativeLayout rlSearch = ViewBindings.findChildViewById(rootView, id);
      if (rlSearch == null) {
        break missingId;
      }

      id = R.id.rlSearchDates;
      LinearLayout rlSearchDates = ViewBindings.findChildViewById(rootView, id);
      if (rlSearchDates == null) {
        break missingId;
      }

      id = R.id.rvMyOrders;
      RecyclerView rvMyOrders = ViewBindings.findChildViewById(rootView, id);
      if (rvMyOrders == null) {
        break missingId;
      }

      id = R.id.tvDateRange;
      TextView tvDateRange = ViewBindings.findChildViewById(rootView, id);
      if (tvDateRange == null) {
        break missingId;
      }

      id = R.id.tvKeywordSearch;
      EditText tvKeywordSearch = ViewBindings.findChildViewById(rootView, id);
      if (tvKeywordSearch == null) {
        break missingId;
      }

      id = R.id.tvLast30Days;
      TextView tvLast30Days = ViewBindings.findChildViewById(rootView, id);
      if (tvLast30Days == null) {
        break missingId;
      }

      id = R.id.tvLast7Days;
      TextView tvLast7Days = ViewBindings.findChildViewById(rootView, id);
      if (tvLast7Days == null) {
        break missingId;
      }

      id = R.id.tvLast90Days;
      TextView tvLast90Days = ViewBindings.findChildViewById(rootView, id);
      if (tvLast90Days == null) {
        break missingId;
      }

      id = R.id.tvOrdersPlaces;
      TextView tvOrdersPlaces = ViewBindings.findChildViewById(rootView, id);
      if (tvOrdersPlaces == null) {
        break missingId;
      }

      id = R.id.tvOrdersPlacesList;
      TextView tvOrdersPlacesList = ViewBindings.findChildViewById(rootView, id);
      if (tvOrdersPlacesList == null) {
        break missingId;
      }

      id = R.id.tvSearch;
      TextView tvSearch = ViewBindings.findChildViewById(rootView, id);
      if (tvSearch == null) {
        break missingId;
      }

      id = R.id.tvShopForProducts;
      TextView tvShopForProducts = ViewBindings.findChildViewById(rootView, id);
      if (tvShopForProducts == null) {
        break missingId;
      }

      id = R.id.voiceLL;
      LinearLayout voiceLL = ViewBindings.findChildViewById(rootView, id);
      if (voiceLL == null) {
        break missingId;
      }

      return new FragmentMyOrdersSearchBinding((ConstraintLayout) rootView, ivKeywordSearch,
          ivMicSearch, ivNoOrders, llSearchOptions, noData, noData2, progressbar, rlSearch,
          rlSearchDates, rvMyOrders, tvDateRange, tvKeywordSearch, tvLast30Days, tvLast7Days,
          tvLast90Days, tvOrdersPlaces, tvOrdersPlacesList, tvSearch, tvShopForProducts, voiceLL);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
