// Generated by view binder compiler. Do not edit!
package com.atd.atdmobileapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.atd.atdmobileapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentViewMyQuotesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView dollarSign;

  @NonNull
  public final ImageView filterQuotes;

  @NonNull
  public final ImageView ivKeywordSearch;

  @NonNull
  public final ImageView ivMicSearch;

  @NonNull
  public final TextView noQuotes;

  @NonNull
  public final ConstraintLayout noResults;

  @NonNull
  public final ImageView printQuotes;

  @NonNull
  public final ProgressBar progressbar;

  @NonNull
  public final RelativeLayout rlSearch;

  @NonNull
  public final RecyclerView rvMyQuotes;

  @NonNull
  public final TextView searchNumbers;

  @NonNull
  public final ImageView shopForProducts;

  @NonNull
  public final EditText tvQuotesSearch;

  @NonNull
  public final TextView tvSearch;

  @NonNull
  public final LinearLayout voiceLL;

  @NonNull
  public final ConstraintLayout withResults;

  private FragmentViewMyQuotesBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView dollarSign, @NonNull ImageView filterQuotes,
      @NonNull ImageView ivKeywordSearch, @NonNull ImageView ivMicSearch,
      @NonNull TextView noQuotes, @NonNull ConstraintLayout noResults,
      @NonNull ImageView printQuotes, @NonNull ProgressBar progressbar,
      @NonNull RelativeLayout rlSearch, @NonNull RecyclerView rvMyQuotes,
      @NonNull TextView searchNumbers, @NonNull ImageView shopForProducts,
      @NonNull EditText tvQuotesSearch, @NonNull TextView tvSearch, @NonNull LinearLayout voiceLL,
      @NonNull ConstraintLayout withResults) {
    this.rootView = rootView;
    this.dollarSign = dollarSign;
    this.filterQuotes = filterQuotes;
    this.ivKeywordSearch = ivKeywordSearch;
    this.ivMicSearch = ivMicSearch;
    this.noQuotes = noQuotes;
    this.noResults = noResults;
    this.printQuotes = printQuotes;
    this.progressbar = progressbar;
    this.rlSearch = rlSearch;
    this.rvMyQuotes = rvMyQuotes;
    this.searchNumbers = searchNumbers;
    this.shopForProducts = shopForProducts;
    this.tvQuotesSearch = tvQuotesSearch;
    this.tvSearch = tvSearch;
    this.voiceLL = voiceLL;
    this.withResults = withResults;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentViewMyQuotesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentViewMyQuotesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_view_my_quotes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentViewMyQuotesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dollarSign;
      ImageView dollarSign = ViewBindings.findChildViewById(rootView, id);
      if (dollarSign == null) {
        break missingId;
      }

      id = R.id.filterQuotes;
      ImageView filterQuotes = ViewBindings.findChildViewById(rootView, id);
      if (filterQuotes == null) {
        break missingId;
      }

      id = R.id.ivKeywordSearch;
      ImageView ivKeywordSearch = ViewBindings.findChildViewById(rootView, id);
      if (ivKeywordSearch == null) {
        break missingId;
      }

      id = R.id.ivMicSearch;
      ImageView ivMicSearch = ViewBindings.findChildViewById(rootView, id);
      if (ivMicSearch == null) {
        break missingId;
      }

      id = R.id.noQuotes;
      TextView noQuotes = ViewBindings.findChildViewById(rootView, id);
      if (noQuotes == null) {
        break missingId;
      }

      id = R.id.noResults;
      ConstraintLayout noResults = ViewBindings.findChildViewById(rootView, id);
      if (noResults == null) {
        break missingId;
      }

      id = R.id.printQuotes;
      ImageView printQuotes = ViewBindings.findChildViewById(rootView, id);
      if (printQuotes == null) {
        break missingId;
      }

      id = R.id.progressbar;
      ProgressBar progressbar = ViewBindings.findChildViewById(rootView, id);
      if (progressbar == null) {
        break missingId;
      }

      id = R.id.rlSearch;
      RelativeLayout rlSearch = ViewBindings.findChildViewById(rootView, id);
      if (rlSearch == null) {
        break missingId;
      }

      id = R.id.rvMyQuotes;
      RecyclerView rvMyQuotes = ViewBindings.findChildViewById(rootView, id);
      if (rvMyQuotes == null) {
        break missingId;
      }

      id = R.id.searchNumbers;
      TextView searchNumbers = ViewBindings.findChildViewById(rootView, id);
      if (searchNumbers == null) {
        break missingId;
      }

      id = R.id.shopForProducts;
      ImageView shopForProducts = ViewBindings.findChildViewById(rootView, id);
      if (shopForProducts == null) {
        break missingId;
      }

      id = R.id.tvQuotesSearch;
      EditText tvQuotesSearch = ViewBindings.findChildViewById(rootView, id);
      if (tvQuotesSearch == null) {
        break missingId;
      }

      id = R.id.tvSearch;
      TextView tvSearch = ViewBindings.findChildViewById(rootView, id);
      if (tvSearch == null) {
        break missingId;
      }

      id = R.id.voiceLL;
      LinearLayout voiceLL = ViewBindings.findChildViewById(rootView, id);
      if (voiceLL == null) {
        break missingId;
      }

      id = R.id.withResults;
      ConstraintLayout withResults = ViewBindings.findChildViewById(rootView, id);
      if (withResults == null) {
        break missingId;
      }

      return new FragmentViewMyQuotesBinding((ConstraintLayout) rootView, dollarSign, filterQuotes,
          ivKeywordSearch, ivMicSearch, noQuotes, noResults, printQuotes, progressbar, rlSearch,
          rvMyQuotes, searchNumbers, shopForProducts, tvQuotesSearch, tvSearch, voiceLL,
          withResults);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
