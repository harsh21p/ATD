// Generated by view binder compiler. Do not edit!
package com.atd.atdmobileapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.atd.atdmobileapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class QuoteDetailsProductItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText QtyValue;

  @NonNull
  public final ImageView decreaseQty;

  @NonNull
  public final ImageView deleteProduct;

  @NonNull
  public final ImageView editItemFee;

  @NonNull
  public final ImageView increaseQty;

  @NonNull
  public final ImageView ivProduct;

  @NonNull
  public final TextView productQty;

  @NonNull
  public final TextView productQtyValue;

  @NonNull
  public final RecyclerView rvChildProudctItem;

  @NonNull
  public final TextView tvLineTotal;

  @NonNull
  public final TextView tvProductGroup;

  @NonNull
  public final TextView tvProductItemFee;

  @NonNull
  public final TextView tvProductModel;

  @NonNull
  public final TextView tvProductName;

  @NonNull
  public final TextView tvProductRetailCost;

  @NonNull
  public final TextView tvProductTotalCost;

  @NonNull
  public final TextView tvSubLineTotal;

  @NonNull
  public final View view1;

  @NonNull
  public final View view2;

  private QuoteDetailsProductItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText QtyValue, @NonNull ImageView decreaseQty, @NonNull ImageView deleteProduct,
      @NonNull ImageView editItemFee, @NonNull ImageView increaseQty, @NonNull ImageView ivProduct,
      @NonNull TextView productQty, @NonNull TextView productQtyValue,
      @NonNull RecyclerView rvChildProudctItem, @NonNull TextView tvLineTotal,
      @NonNull TextView tvProductGroup, @NonNull TextView tvProductItemFee,
      @NonNull TextView tvProductModel, @NonNull TextView tvProductName,
      @NonNull TextView tvProductRetailCost, @NonNull TextView tvProductTotalCost,
      @NonNull TextView tvSubLineTotal, @NonNull View view1, @NonNull View view2) {
    this.rootView = rootView;
    this.QtyValue = QtyValue;
    this.decreaseQty = decreaseQty;
    this.deleteProduct = deleteProduct;
    this.editItemFee = editItemFee;
    this.increaseQty = increaseQty;
    this.ivProduct = ivProduct;
    this.productQty = productQty;
    this.productQtyValue = productQtyValue;
    this.rvChildProudctItem = rvChildProudctItem;
    this.tvLineTotal = tvLineTotal;
    this.tvProductGroup = tvProductGroup;
    this.tvProductItemFee = tvProductItemFee;
    this.tvProductModel = tvProductModel;
    this.tvProductName = tvProductName;
    this.tvProductRetailCost = tvProductRetailCost;
    this.tvProductTotalCost = tvProductTotalCost;
    this.tvSubLineTotal = tvSubLineTotal;
    this.view1 = view1;
    this.view2 = view2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static QuoteDetailsProductItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static QuoteDetailsProductItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.quote_details_product_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static QuoteDetailsProductItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.QtyValue;
      EditText QtyValue = ViewBindings.findChildViewById(rootView, id);
      if (QtyValue == null) {
        break missingId;
      }

      id = R.id.decreaseQty;
      ImageView decreaseQty = ViewBindings.findChildViewById(rootView, id);
      if (decreaseQty == null) {
        break missingId;
      }

      id = R.id.deleteProduct;
      ImageView deleteProduct = ViewBindings.findChildViewById(rootView, id);
      if (deleteProduct == null) {
        break missingId;
      }

      id = R.id.editItemFee;
      ImageView editItemFee = ViewBindings.findChildViewById(rootView, id);
      if (editItemFee == null) {
        break missingId;
      }

      id = R.id.increaseQty;
      ImageView increaseQty = ViewBindings.findChildViewById(rootView, id);
      if (increaseQty == null) {
        break missingId;
      }

      id = R.id.ivProduct;
      ImageView ivProduct = ViewBindings.findChildViewById(rootView, id);
      if (ivProduct == null) {
        break missingId;
      }

      id = R.id.productQty;
      TextView productQty = ViewBindings.findChildViewById(rootView, id);
      if (productQty == null) {
        break missingId;
      }

      id = R.id.productQtyValue;
      TextView productQtyValue = ViewBindings.findChildViewById(rootView, id);
      if (productQtyValue == null) {
        break missingId;
      }

      id = R.id.rvChildProudctItem;
      RecyclerView rvChildProudctItem = ViewBindings.findChildViewById(rootView, id);
      if (rvChildProudctItem == null) {
        break missingId;
      }

      id = R.id.tvLineTotal;
      TextView tvLineTotal = ViewBindings.findChildViewById(rootView, id);
      if (tvLineTotal == null) {
        break missingId;
      }

      id = R.id.tvProductGroup;
      TextView tvProductGroup = ViewBindings.findChildViewById(rootView, id);
      if (tvProductGroup == null) {
        break missingId;
      }

      id = R.id.tvProductItemFee;
      TextView tvProductItemFee = ViewBindings.findChildViewById(rootView, id);
      if (tvProductItemFee == null) {
        break missingId;
      }

      id = R.id.tvProductModel;
      TextView tvProductModel = ViewBindings.findChildViewById(rootView, id);
      if (tvProductModel == null) {
        break missingId;
      }

      id = R.id.tvProductName;
      TextView tvProductName = ViewBindings.findChildViewById(rootView, id);
      if (tvProductName == null) {
        break missingId;
      }

      id = R.id.tvProductRetailCost;
      TextView tvProductRetailCost = ViewBindings.findChildViewById(rootView, id);
      if (tvProductRetailCost == null) {
        break missingId;
      }

      id = R.id.tvProductTotalCost;
      TextView tvProductTotalCost = ViewBindings.findChildViewById(rootView, id);
      if (tvProductTotalCost == null) {
        break missingId;
      }

      id = R.id.tvSubLineTotal;
      TextView tvSubLineTotal = ViewBindings.findChildViewById(rootView, id);
      if (tvSubLineTotal == null) {
        break missingId;
      }

      id = R.id.view1;
      View view1 = ViewBindings.findChildViewById(rootView, id);
      if (view1 == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      return new QuoteDetailsProductItemBinding((ConstraintLayout) rootView, QtyValue, decreaseQty,
          deleteProduct, editItemFee, increaseQty, ivProduct, productQty, productQtyValue,
          rvChildProudctItem, tvLineTotal, tvProductGroup, tvProductItemFee, tvProductModel,
          tvProductName, tvProductRetailCost, tvProductTotalCost, tvSubLineTotal, view1, view2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
