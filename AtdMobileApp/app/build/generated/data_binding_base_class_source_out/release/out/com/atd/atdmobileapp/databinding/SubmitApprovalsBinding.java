// Generated by view binder compiler. Do not edit!
package com.atd.atdmobileapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.atd.atdmobileapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SubmitApprovalsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CheckBox cbSubmittedBy;

  @NonNull
  public final RecyclerView rvProductDetails;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvSubmittedBy;

  @NonNull
  public final TextView tvTotalAmounts;

  @NonNull
  public final TextView tvTotalItems;

  private SubmitApprovalsBinding(@NonNull ConstraintLayout rootView,
      @NonNull CheckBox cbSubmittedBy, @NonNull RecyclerView rvProductDetails,
      @NonNull TextView tvDate, @NonNull TextView tvSubmittedBy, @NonNull TextView tvTotalAmounts,
      @NonNull TextView tvTotalItems) {
    this.rootView = rootView;
    this.cbSubmittedBy = cbSubmittedBy;
    this.rvProductDetails = rvProductDetails;
    this.tvDate = tvDate;
    this.tvSubmittedBy = tvSubmittedBy;
    this.tvTotalAmounts = tvTotalAmounts;
    this.tvTotalItems = tvTotalItems;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SubmitApprovalsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SubmitApprovalsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.submit_approvals, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SubmitApprovalsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cbSubmittedBy;
      CheckBox cbSubmittedBy = ViewBindings.findChildViewById(rootView, id);
      if (cbSubmittedBy == null) {
        break missingId;
      }

      id = R.id.rvProductDetails;
      RecyclerView rvProductDetails = ViewBindings.findChildViewById(rootView, id);
      if (rvProductDetails == null) {
        break missingId;
      }

      id = R.id.tvDate;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tvSubmittedBy;
      TextView tvSubmittedBy = ViewBindings.findChildViewById(rootView, id);
      if (tvSubmittedBy == null) {
        break missingId;
      }

      id = R.id.tvTotalAmounts;
      TextView tvTotalAmounts = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalAmounts == null) {
        break missingId;
      }

      id = R.id.tvTotalItems;
      TextView tvTotalItems = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalItems == null) {
        break missingId;
      }

      return new SubmitApprovalsBinding((ConstraintLayout) rootView, cbSubmittedBy,
          rvProductDetails, tvDate, tvSubmittedBy, tvTotalAmounts, tvTotalItems);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
