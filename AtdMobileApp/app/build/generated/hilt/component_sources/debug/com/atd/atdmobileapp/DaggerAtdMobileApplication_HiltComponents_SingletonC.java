// Generated by Dagger (https://dagger.dev).
package com.atd.atdmobileapp;

import android.app.Activity;
import android.app.Service;
import android.content.Context;
import android.view.View;
import androidx.fragment.app.Fragment;
import androidx.lifecycle.SavedStateHandle;
import androidx.lifecycle.ViewModel;
import com.atd.atdmobileapp.api.AuthInterceptor;
import com.atd.atdmobileapp.api.AuthInterceptor_Factory;
import com.atd.atdmobileapp.api.AuthInterceptor_MembersInjector;
import com.atd.atdmobileapp.api.CustomerApi;
import com.atd.atdmobileapp.api.DeliveriesApi;
import com.atd.atdmobileapp.api.ListApi;
import com.atd.atdmobileapp.api.LocationApi;
import com.atd.atdmobileapp.api.MyQuotesApi;
import com.atd.atdmobileapp.api.OrderApi;
import com.atd.atdmobileapp.api.ProductsApi;
import com.atd.atdmobileapp.api.UserApi;
import com.atd.atdmobileapp.api.VehiclesApi;
import com.atd.atdmobileapp.di.DbModule;
import com.atd.atdmobileapp.di.DbModule_ProvideConfigLocationDaoFactory;
import com.atd.atdmobileapp.di.DbModule_ProvideDaoFactory;
import com.atd.atdmobileapp.di.DbModule_ProvideFactory;
import com.atd.atdmobileapp.di.DbModule_ProvidePermissionsDaoFactory;
import com.atd.atdmobileapp.di.FirebaseModule;
import com.atd.atdmobileapp.di.FirebaseModule_ProvideFirebaseFirestoreFactory;
import com.atd.atdmobileapp.di.NetworkModule;
import com.atd.atdmobileapp.di.NetworkModule_ProvideApplicationContextFactory;
import com.atd.atdmobileapp.di.NetworkModule_ProvideCertificateHelperFactory;
import com.atd.atdmobileapp.di.NetworkModule_ProvideCustomerApiFactory;
import com.atd.atdmobileapp.di.NetworkModule_ProvideDeliveriesApiFactory;
import com.atd.atdmobileapp.di.NetworkModule_ProvideListApiFactory;
import com.atd.atdmobileapp.di.NetworkModule_ProvideLocationApiFactory;
import com.atd.atdmobileapp.di.NetworkModule_ProvideOkhttpClientFactory;
import com.atd.atdmobileapp.di.NetworkModule_ProvideOrderApiFactory;
import com.atd.atdmobileapp.di.NetworkModule_ProvideProductsApiFactory;
import com.atd.atdmobileapp.di.NetworkModule_ProvideQuotesApiFactory;
import com.atd.atdmobileapp.di.NetworkModule_ProvideRetrofitBuilderFactory;
import com.atd.atdmobileapp.di.NetworkModule_ProvideUserApiFactory;
import com.atd.atdmobileapp.di.NetworkModule_ProvideVehiclesApiFactory;
import com.atd.atdmobileapp.repository.ApproveRejectOrderRepository;
import com.atd.atdmobileapp.repository.ConfigLocationRepository;
import com.atd.atdmobileapp.repository.CustomerRepository;
import com.atd.atdmobileapp.repository.CutOffDateRepository;
import com.atd.atdmobileapp.repository.DeliveriesRepository;
import com.atd.atdmobileapp.repository.LocationConfigurationRepository;
import com.atd.atdmobileapp.repository.LocationRepository;
import com.atd.atdmobileapp.repository.MyApprovalsRepository;
import com.atd.atdmobileapp.repository.MyListRepository;
import com.atd.atdmobileapp.repository.MyOrderDetailsRepository;
import com.atd.atdmobileapp.repository.MyOrderRepository;
import com.atd.atdmobileapp.repository.MyQuotesRepository;
import com.atd.atdmobileapp.repository.OrderReturnAvailableDetailsRepository;
import com.atd.atdmobileapp.repository.PermissionsRepository;
import com.atd.atdmobileapp.repository.ProductByKeywordRepository;
import com.atd.atdmobileapp.repository.ProductsRepository;
import com.atd.atdmobileapp.repository.RDBConfigLocationsRepository;
import com.atd.atdmobileapp.repository.RDBKeywordSearchRepository;
import com.atd.atdmobileapp.repository.UserRepository;
import com.atd.atdmobileapp.repository.VehiclesRepository;
import com.atd.atdmobileapp.roomdatabase.ATDRoomDatabase;
import com.atd.atdmobileapp.roomdatabase.configlocations.ConfigLocationsDAO;
import com.atd.atdmobileapp.roomdatabase.keywordsearch.PreviousKeywordSearchDAO;
import com.atd.atdmobileapp.roomdatabase.permissions.PermissionsDAO;
import com.atd.atdmobileapp.ui.barcode.BarcodeSearchFragment;
import com.atd.atdmobileapp.ui.barcode.BarcodeSearchFragment_MembersInjector;
import com.atd.atdmobileapp.ui.bottomnavigation.BottomNavigationScreenFragment;
import com.atd.atdmobileapp.ui.bottomnavigation.BottomNavigationScreenFragment_MembersInjector;
import com.atd.atdmobileapp.ui.bottomnavigation.ConfigLocationViewModel;
import com.atd.atdmobileapp.ui.bottomnavigation.ConfigLocationViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.bottomnavigation.RMDConfigLocationViewModel;
import com.atd.atdmobileapp.ui.bottomnavigation.RMDConfigLocationViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.bottomnavigation.account.AccountFragment;
import com.atd.atdmobileapp.ui.bottomnavigation.account.AccountFragment_MembersInjector;
import com.atd.atdmobileapp.ui.bottomnavigation.account.AccountViewModel;
import com.atd.atdmobileapp.ui.bottomnavigation.account.AccountViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.bottomnavigation.account.preferences.PreferencesFragment;
import com.atd.atdmobileapp.ui.bottomnavigation.account.preferences.PreferencesFragment_MembersInjector;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.HomeViewModel;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.HomeViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.approvals.ApprovalsFragment;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.approvals.ApprovalsFragment_MembersInjector;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.approvals.MyApprovalsViewModel;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.approvals.MyApprovalsViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.approvals.submitaprovals.SubmitApprovalsFragment;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.approvals.submitaprovals.SubmitApprovalsFragment_MembersInjector;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.approvals.submitaprovals.SubmitApprovalsViewModel;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.approvals.submitaprovals.SubmitApprovalsViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myorders.MyOrdersFragment;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myorders.MyOrdersFragment_MembersInjector;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myorders.MyOrdersSearchFragment;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myorders.MyOrdersSearchFragment_MembersInjector;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myorders.MyOrdersViewModel;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myorders.MyOrdersViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myorders.myorderdetails.MyOrderDetailsFragment;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myorders.myorderdetails.MyOrderDetailsFragment_MembersInjector;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myorders.myorderdetails.MyOrderDetailsViewModel;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myorders.myorderdetails.MyOrderDetailsViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myquotes.DeleteQuoteFragment;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myquotes.DeleteQuoteFragment_MembersInjector;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myquotes.EditQuoteFragment;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myquotes.EditQuoteFragment_MembersInjector;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myquotes.MyQuotesViewModel;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myquotes.MyQuotesViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myquotes.MyQuotsFragment;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myquotes.MyQuotsFragment_MembersInjector;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myquotes.ViewMyQuotesFragment;
import com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myquotes.ViewMyQuotesFragment_MembersInjector;
import com.atd.atdmobileapp.ui.bottomnavigation.hometabscreen.HomeTabFragment;
import com.atd.atdmobileapp.ui.bottomnavigation.hometabscreen.HomeTabFragment_MembersInjector;
import com.atd.atdmobileapp.ui.bottomnavigation.mygarage.MyGarageFragment;
import com.atd.atdmobileapp.ui.bottomnavigation.mygarage.MyGarageFragment_MembersInjector;
import com.atd.atdmobileapp.ui.cart.CartFragment;
import com.atd.atdmobileapp.ui.cart.CartFragment_MembersInjector;
import com.atd.atdmobileapp.ui.cart.CartViewModel;
import com.atd.atdmobileapp.ui.cart.CartViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.cart.checkout.CheckoutFragment;
import com.atd.atdmobileapp.ui.cart.checkout.CheckoutFragment_MembersInjector;
import com.atd.atdmobileapp.ui.cart.checkout.CheckoutViewModel;
import com.atd.atdmobileapp.ui.cart.checkout.CheckoutViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.cart.deliverydayandwindow.DeliveryDayAndWindowFragment;
import com.atd.atdmobileapp.ui.cart.deliverydayandwindow.DeliveryDayAndWindowFragment_MembersInjector;
import com.atd.atdmobileapp.ui.cart.deliverydayandwindow.DeliveryDayAndWindowViewModel;
import com.atd.atdmobileapp.ui.cart.deliverydayandwindow.DeliveryDayAndWindowViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.cart.quantityanddelivery.QuantityAndDeliveryFragment;
import com.atd.atdmobileapp.ui.cart.quantityanddelivery.QuantityAndDeliveryFragment_MembersInjector;
import com.atd.atdmobileapp.ui.cart.quantityanddelivery.QuantityAndDeliveryViewModel;
import com.atd.atdmobileapp.ui.cart.quantityanddelivery.QuantityAndDeliveryViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.chooseprofile.ChooseProfileFragment;
import com.atd.atdmobileapp.ui.chooseprofile.ChooseProfileFragment_MembersInjector;
import com.atd.atdmobileapp.ui.keywordsearch.keywordrecentsearches.KeyWordSearchFragment;
import com.atd.atdmobileapp.ui.keywordsearch.keywordrecentsearches.KeyWordSearchFragment_MembersInjector;
import com.atd.atdmobileapp.ui.keywordsearch.keywordrecentsearches.RecentKeywordSearchViewModel;
import com.atd.atdmobileapp.ui.keywordsearch.keywordrecentsearches.RecentKeywordSearchViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.keywordsearch.keywordsearchresults.CutOffTimesViewModel;
import com.atd.atdmobileapp.ui.keywordsearch.keywordsearchresults.CutOffTimesViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.keywordsearch.keywordsearchresults.KeywordSearchResultsFragment;
import com.atd.atdmobileapp.ui.keywordsearch.keywordsearchresults.KeywordSearchResultsFragment_MembersInjector;
import com.atd.atdmobileapp.ui.keywordsearch.keywordsearchresults.ProductByKeywordViewModel;
import com.atd.atdmobileapp.ui.keywordsearch.keywordsearchresults.ProductByKeywordViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.licenceplate.LicencePlateFragment;
import com.atd.atdmobileapp.ui.licenceplate.LicencePlateFragment_MembersInjector;
import com.atd.atdmobileapp.ui.licenceplate.LicencePlateViewModel;
import com.atd.atdmobileapp.ui.licenceplate.LicencePlateViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.licenceplate.OCRLicencePlate;
import com.atd.atdmobileapp.ui.licenceplate.OCRLicencePlate_MembersInjector;
import com.atd.atdmobileapp.ui.login.LoginFragment;
import com.atd.atdmobileapp.ui.login.LoginFragment_MembersInjector;
import com.atd.atdmobileapp.ui.login.LoginViewModel;
import com.atd.atdmobileapp.ui.login.LoginViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.mylists.CreateMyListFragment;
import com.atd.atdmobileapp.ui.mylists.CreateMyListFragment_MembersInjector;
import com.atd.atdmobileapp.ui.mylists.FrequencyDialog;
import com.atd.atdmobileapp.ui.mylists.FrequencyDialog_MembersInjector;
import com.atd.atdmobileapp.ui.mylists.MyListDetailsFragment;
import com.atd.atdmobileapp.ui.mylists.MyListDetailsFragment_MembersInjector;
import com.atd.atdmobileapp.ui.mylists.MyListFragment;
import com.atd.atdmobileapp.ui.mylists.MyListFragment_MembersInjector;
import com.atd.atdmobileapp.ui.mylists.MyListViewModel;
import com.atd.atdmobileapp.ui.mylists.MyListViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.onboarding.pages.ProductDeliveryFragment;
import com.atd.atdmobileapp.ui.onboarding.pages.ProductDeliveryFragment_MembersInjector;
import com.atd.atdmobileapp.ui.onboarding.pages.StreamLinedSearchFragment;
import com.atd.atdmobileapp.ui.onboarding.pages.StreamLinedSearchFragment_MembersInjector;
import com.atd.atdmobileapp.ui.onboarding.pages.WelcomeToATDFragment;
import com.atd.atdmobileapp.ui.onboarding.pages.WelcomeToATDFragment_MembersInjector;
import com.atd.atdmobileapp.ui.product.ProductFragment;
import com.atd.atdmobileapp.ui.product.ProductFragment_MembersInjector;
import com.atd.atdmobileapp.ui.product.ProductViewModel;
import com.atd.atdmobileapp.ui.product.ProductViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.product.TubesAndFlapsFragment;
import com.atd.atdmobileapp.ui.product.TubesAndFlapsFragment_MembersInjector;
import com.atd.atdmobileapp.ui.product.supplies.SuppliesFragment;
import com.atd.atdmobileapp.ui.product.supplies.SuppliesFragment_MembersInjector;
import com.atd.atdmobileapp.ui.product.tirerepair.TireRepairFragment;
import com.atd.atdmobileapp.ui.product.tirerepair.TireRepairFragment_MembersInjector;
import com.atd.atdmobileapp.ui.product.tires.TiresFragment;
import com.atd.atdmobileapp.ui.product.tires.TiresFragment_MembersInjector;
import com.atd.atdmobileapp.ui.product.tires.brands.TiresBrandFragment;
import com.atd.atdmobileapp.ui.product.tires.brands.TiresBrandFragment_MembersInjector;
import com.atd.atdmobileapp.ui.product.tires.brands.TiresBrandsViewModel;
import com.atd.atdmobileapp.ui.product.tires.brands.TiresBrandsViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.product.tools.ToolsFragment;
import com.atd.atdmobileapp.ui.product.tools.ToolsFragment_MembersInjector;
import com.atd.atdmobileapp.ui.product.wheelaccessories.WheelAccessoriesFragment;
import com.atd.atdmobileapp.ui.product.wheelaccessories.WheelAccessoriesFragment_MembersInjector;
import com.atd.atdmobileapp.ui.product.wheels.WheelsFragment;
import com.atd.atdmobileapp.ui.product.wheels.WheelsFragment_MembersInjector;
import com.atd.atdmobileapp.ui.productdetails.ProductDetailsFragment;
import com.atd.atdmobileapp.ui.productdetails.ProductDetailsFragment_MembersInjector;
import com.atd.atdmobileapp.ui.rebate.RebateFragment;
import com.atd.atdmobileapp.ui.rebate.RebateFragment_MembersInjector;
import com.atd.atdmobileapp.ui.selectlocation.SelectLocation;
import com.atd.atdmobileapp.ui.selectlocation.SelectLocationViewModel;
import com.atd.atdmobileapp.ui.selectlocation.SelectLocationViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.selectlocation.SelectLocation_MembersInjector;
import com.atd.atdmobileapp.ui.splash.SplashFragment;
import com.atd.atdmobileapp.ui.splash.SplashFragment_MembersInjector;
import com.atd.atdmobileapp.ui.vehicle.VehicleSearch;
import com.atd.atdmobileapp.ui.vehicle.VehicleSearch_MembersInjector;
import com.atd.atdmobileapp.ui.vehicle.VehicleViewModel;
import com.atd.atdmobileapp.ui.vehicle.VehicleViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.ui.vehicle.make.MakeFragment;
import com.atd.atdmobileapp.ui.vehicle.make.MakeFragment_MembersInjector;
import com.atd.atdmobileapp.ui.vehicle.model.ModelFragment;
import com.atd.atdmobileapp.ui.vehicle.model.ModelFragment_MembersInjector;
import com.atd.atdmobileapp.ui.vehicle.oesize.OESizeFragment;
import com.atd.atdmobileapp.ui.vehicle.oesize.OESizeFragment_MembersInjector;
import com.atd.atdmobileapp.ui.vehicle.positionandsize.SizeFragment;
import com.atd.atdmobileapp.ui.vehicle.positionandsize.SizeFragment_MembersInjector;
import com.atd.atdmobileapp.ui.vehicle.trim.TrimFragment;
import com.atd.atdmobileapp.ui.vehicle.trim.TrimFragment_MembersInjector;
import com.atd.atdmobileapp.ui.vehicle.year.YearFragment;
import com.atd.atdmobileapp.ui.vehicle.year.YearFragment_MembersInjector;
import com.atd.atdmobileapp.ui.vin.BarcodeFragment;
import com.atd.atdmobileapp.ui.vin.BarcodeFragment_MembersInjector;
import com.atd.atdmobileapp.ui.vin.VINFragment;
import com.atd.atdmobileapp.ui.vin.VINFragment_MembersInjector;
import com.atd.atdmobileapp.ui.vin.VinViewModel;
import com.atd.atdmobileapp.ui.vin.VinViewModel_HiltModules_KeyModule_ProvideFactory;
import com.atd.atdmobileapp.utils.CertificateHelper;
import com.atd.atdmobileapp.utils.FirestoreRepository;
import com.atd.atdmobileapp.utils.SharedPrefManager;
import com.google.common.collect.ImmutableMap;
import com.google.common.collect.ImmutableSet;
import com.google.errorprone.annotations.CanIgnoreReturnValue;
import com.google.firebase.firestore.FirebaseFirestore;
import dagger.hilt.android.ActivityRetainedLifecycle;
import dagger.hilt.android.ViewModelLifecycle;
import dagger.hilt.android.flags.HiltWrapper_FragmentGetContextFix_FragmentGetContextFixModule;
import dagger.hilt.android.internal.builders.ActivityComponentBuilder;
import dagger.hilt.android.internal.builders.ActivityRetainedComponentBuilder;
import dagger.hilt.android.internal.builders.FragmentComponentBuilder;
import dagger.hilt.android.internal.builders.ServiceComponentBuilder;
import dagger.hilt.android.internal.builders.ViewComponentBuilder;
import dagger.hilt.android.internal.builders.ViewModelComponentBuilder;
import dagger.hilt.android.internal.builders.ViewWithFragmentComponentBuilder;
import dagger.hilt.android.internal.lifecycle.DefaultViewModelFactories;
import dagger.hilt.android.internal.lifecycle.DefaultViewModelFactories_InternalFactoryFactory_Factory;
import dagger.hilt.android.internal.managers.ActivityRetainedComponentManager_LifecycleModule_ProvideActivityRetainedLifecycleFactory;
import dagger.hilt.android.internal.modules.ApplicationContextModule;
import dagger.hilt.android.internal.modules.ApplicationContextModule_ProvideApplicationFactory;
import dagger.hilt.android.internal.modules.ApplicationContextModule_ProvideContextFactory;
import dagger.internal.DaggerGenerated;
import dagger.internal.DoubleCheck;
import dagger.internal.Preconditions;
import java.util.Map;
import java.util.Set;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerAtdMobileApplication_HiltComponents_SingletonC {
  private DaggerAtdMobileApplication_HiltComponents_SingletonC() {
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private ApplicationContextModule applicationContextModule;

    private NetworkModule networkModule;

    private Builder() {
    }

    public Builder applicationContextModule(ApplicationContextModule applicationContextModule) {
      this.applicationContextModule = Preconditions.checkNotNull(applicationContextModule);
      return this;
    }

    /**
     * @deprecated This module is declared, but an instance is not used in the component. This method is a no-op. For more, see https://dagger.dev/unused-modules.
     */
    @Deprecated
    public Builder dbModule(DbModule dbModule) {
      Preconditions.checkNotNull(dbModule);
      return this;
    }

    /**
     * @deprecated This module is declared, but an instance is not used in the component. This method is a no-op. For more, see https://dagger.dev/unused-modules.
     */
    @Deprecated
    public Builder firebaseModule(FirebaseModule firebaseModule) {
      Preconditions.checkNotNull(firebaseModule);
      return this;
    }

    /**
     * @deprecated This module is declared, but an instance is not used in the component. This method is a no-op. For more, see https://dagger.dev/unused-modules.
     */
    @Deprecated
    public Builder hiltWrapper_FragmentGetContextFix_FragmentGetContextFixModule(
        HiltWrapper_FragmentGetContextFix_FragmentGetContextFixModule hiltWrapper_FragmentGetContextFix_FragmentGetContextFixModule) {
      Preconditions.checkNotNull(hiltWrapper_FragmentGetContextFix_FragmentGetContextFixModule);
      return this;
    }

    public Builder networkModule(NetworkModule networkModule) {
      this.networkModule = Preconditions.checkNotNull(networkModule);
      return this;
    }

    public AtdMobileApplication_HiltComponents.SingletonC build() {
      Preconditions.checkBuilderRequirement(applicationContextModule, ApplicationContextModule.class);
      if (networkModule == null) {
        this.networkModule = new NetworkModule();
      }
      return new SingletonCImpl(applicationContextModule, networkModule);
    }
  }

  private static final class ActivityRetainedCBuilder implements AtdMobileApplication_HiltComponents.ActivityRetainedC.Builder {
    private final SingletonCImpl singletonCImpl;

    private ActivityRetainedCBuilder(SingletonCImpl singletonCImpl) {
      this.singletonCImpl = singletonCImpl;
    }

    @Override
    public AtdMobileApplication_HiltComponents.ActivityRetainedC build() {
      return new ActivityRetainedCImpl(singletonCImpl);
    }
  }

  private static final class ActivityCBuilder implements AtdMobileApplication_HiltComponents.ActivityC.Builder {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl;

    private Activity activity;

    private ActivityCBuilder(SingletonCImpl singletonCImpl,
        ActivityRetainedCImpl activityRetainedCImpl) {
      this.singletonCImpl = singletonCImpl;
      this.activityRetainedCImpl = activityRetainedCImpl;
    }

    @Override
    public ActivityCBuilder activity(Activity activity) {
      this.activity = Preconditions.checkNotNull(activity);
      return this;
    }

    @Override
    public AtdMobileApplication_HiltComponents.ActivityC build() {
      Preconditions.checkBuilderRequirement(activity, Activity.class);
      return new ActivityCImpl(singletonCImpl, activityRetainedCImpl, activity);
    }
  }

  private static final class FragmentCBuilder implements AtdMobileApplication_HiltComponents.FragmentC.Builder {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl;

    private final ActivityCImpl activityCImpl;

    private Fragment fragment;

    private FragmentCBuilder(SingletonCImpl singletonCImpl,
        ActivityRetainedCImpl activityRetainedCImpl, ActivityCImpl activityCImpl) {
      this.singletonCImpl = singletonCImpl;
      this.activityRetainedCImpl = activityRetainedCImpl;
      this.activityCImpl = activityCImpl;
    }

    @Override
    public FragmentCBuilder fragment(Fragment fragment) {
      this.fragment = Preconditions.checkNotNull(fragment);
      return this;
    }

    @Override
    public AtdMobileApplication_HiltComponents.FragmentC build() {
      Preconditions.checkBuilderRequirement(fragment, Fragment.class);
      return new FragmentCImpl(singletonCImpl, activityRetainedCImpl, activityCImpl, fragment);
    }
  }

  private static final class ViewWithFragmentCBuilder implements AtdMobileApplication_HiltComponents.ViewWithFragmentC.Builder {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl;

    private final ActivityCImpl activityCImpl;

    private final FragmentCImpl fragmentCImpl;

    private View view;

    private ViewWithFragmentCBuilder(SingletonCImpl singletonCImpl,
        ActivityRetainedCImpl activityRetainedCImpl, ActivityCImpl activityCImpl,
        FragmentCImpl fragmentCImpl) {
      this.singletonCImpl = singletonCImpl;
      this.activityRetainedCImpl = activityRetainedCImpl;
      this.activityCImpl = activityCImpl;
      this.fragmentCImpl = fragmentCImpl;
    }

    @Override
    public ViewWithFragmentCBuilder view(View view) {
      this.view = Preconditions.checkNotNull(view);
      return this;
    }

    @Override
    public AtdMobileApplication_HiltComponents.ViewWithFragmentC build() {
      Preconditions.checkBuilderRequirement(view, View.class);
      return new ViewWithFragmentCImpl(singletonCImpl, activityRetainedCImpl, activityCImpl, fragmentCImpl, view);
    }
  }

  private static final class ViewCBuilder implements AtdMobileApplication_HiltComponents.ViewC.Builder {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl;

    private final ActivityCImpl activityCImpl;

    private View view;

    private ViewCBuilder(SingletonCImpl singletonCImpl, ActivityRetainedCImpl activityRetainedCImpl,
        ActivityCImpl activityCImpl) {
      this.singletonCImpl = singletonCImpl;
      this.activityRetainedCImpl = activityRetainedCImpl;
      this.activityCImpl = activityCImpl;
    }

    @Override
    public ViewCBuilder view(View view) {
      this.view = Preconditions.checkNotNull(view);
      return this;
    }

    @Override
    public AtdMobileApplication_HiltComponents.ViewC build() {
      Preconditions.checkBuilderRequirement(view, View.class);
      return new ViewCImpl(singletonCImpl, activityRetainedCImpl, activityCImpl, view);
    }
  }

  private static final class ViewModelCBuilder implements AtdMobileApplication_HiltComponents.ViewModelC.Builder {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl;

    private SavedStateHandle savedStateHandle;

    private ViewModelLifecycle viewModelLifecycle;

    private ViewModelCBuilder(SingletonCImpl singletonCImpl,
        ActivityRetainedCImpl activityRetainedCImpl) {
      this.singletonCImpl = singletonCImpl;
      this.activityRetainedCImpl = activityRetainedCImpl;
    }

    @Override
    public ViewModelCBuilder savedStateHandle(SavedStateHandle handle) {
      this.savedStateHandle = Preconditions.checkNotNull(handle);
      return this;
    }

    @Override
    public ViewModelCBuilder viewModelLifecycle(ViewModelLifecycle viewModelLifecycle) {
      this.viewModelLifecycle = Preconditions.checkNotNull(viewModelLifecycle);
      return this;
    }

    @Override
    public AtdMobileApplication_HiltComponents.ViewModelC build() {
      Preconditions.checkBuilderRequirement(savedStateHandle, SavedStateHandle.class);
      Preconditions.checkBuilderRequirement(viewModelLifecycle, ViewModelLifecycle.class);
      return new ViewModelCImpl(singletonCImpl, activityRetainedCImpl, savedStateHandle, viewModelLifecycle);
    }
  }

  private static final class ServiceCBuilder implements AtdMobileApplication_HiltComponents.ServiceC.Builder {
    private final SingletonCImpl singletonCImpl;

    private Service service;

    private ServiceCBuilder(SingletonCImpl singletonCImpl) {
      this.singletonCImpl = singletonCImpl;
    }

    @Override
    public ServiceCBuilder service(Service service) {
      this.service = Preconditions.checkNotNull(service);
      return this;
    }

    @Override
    public AtdMobileApplication_HiltComponents.ServiceC build() {
      Preconditions.checkBuilderRequirement(service, Service.class);
      return new ServiceCImpl(singletonCImpl, service);
    }
  }

  private static final class ViewWithFragmentCImpl extends AtdMobileApplication_HiltComponents.ViewWithFragmentC {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl;

    private final ActivityCImpl activityCImpl;

    private final FragmentCImpl fragmentCImpl;

    private final ViewWithFragmentCImpl viewWithFragmentCImpl = this;

    private ViewWithFragmentCImpl(SingletonCImpl singletonCImpl,
        ActivityRetainedCImpl activityRetainedCImpl, ActivityCImpl activityCImpl,
        FragmentCImpl fragmentCImpl, View viewParam) {
      this.singletonCImpl = singletonCImpl;
      this.activityRetainedCImpl = activityRetainedCImpl;
      this.activityCImpl = activityCImpl;
      this.fragmentCImpl = fragmentCImpl;


    }
  }

  private static final class FragmentCImpl extends AtdMobileApplication_HiltComponents.FragmentC {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl;

    private final ActivityCImpl activityCImpl;

    private final FragmentCImpl fragmentCImpl = this;

    private FragmentCImpl(SingletonCImpl singletonCImpl,
        ActivityRetainedCImpl activityRetainedCImpl, ActivityCImpl activityCImpl,
        Fragment fragmentParam) {
      this.singletonCImpl = singletonCImpl;
      this.activityRetainedCImpl = activityRetainedCImpl;
      this.activityCImpl = activityCImpl;


    }

    @Override
    public void injectBarcodeSearchFragment(BarcodeSearchFragment barcodeSearchFragment) {
      injectBarcodeSearchFragment2(barcodeSearchFragment);
    }

    @Override
    public void injectBottomNavigationScreenFragment(
        BottomNavigationScreenFragment bottomNavigationScreenFragment) {
      injectBottomNavigationScreenFragment2(bottomNavigationScreenFragment);
    }

    @Override
    public void injectAccountFragment(AccountFragment accountFragment) {
      injectAccountFragment2(accountFragment);
    }

    @Override
    public void injectPreferencesFragment(PreferencesFragment preferencesFragment) {
      injectPreferencesFragment2(preferencesFragment);
    }

    @Override
    public void injectApprovalsFragment(ApprovalsFragment approvalsFragment) {
      injectApprovalsFragment2(approvalsFragment);
    }

    @Override
    public void injectSubmitApprovalsFragment(SubmitApprovalsFragment submitApprovalsFragment) {
      injectSubmitApprovalsFragment2(submitApprovalsFragment);
    }

    @Override
    public void injectMyOrdersFragment(MyOrdersFragment myOrdersFragment) {
      injectMyOrdersFragment2(myOrdersFragment);
    }

    @Override
    public void injectMyOrdersSearchFragment(MyOrdersSearchFragment myOrdersSearchFragment) {
      injectMyOrdersSearchFragment2(myOrdersSearchFragment);
    }

    @Override
    public void injectMyOrderDetailsFragment(MyOrderDetailsFragment myOrderDetailsFragment) {
      injectMyOrderDetailsFragment2(myOrderDetailsFragment);
    }

    @Override
    public void injectDeleteQuoteFragment(DeleteQuoteFragment deleteQuoteFragment) {
      injectDeleteQuoteFragment2(deleteQuoteFragment);
    }

    @Override
    public void injectEditQuoteFragment(EditQuoteFragment editQuoteFragment) {
      injectEditQuoteFragment2(editQuoteFragment);
    }

    @Override
    public void injectMyQuotsFragment(MyQuotsFragment myQuotsFragment) {
      injectMyQuotsFragment2(myQuotsFragment);
    }

    @Override
    public void injectViewMyQuotesFragment(ViewMyQuotesFragment viewMyQuotesFragment) {
      injectViewMyQuotesFragment2(viewMyQuotesFragment);
    }

    @Override
    public void injectHomeTabFragment(HomeTabFragment homeTabFragment) {
      injectHomeTabFragment2(homeTabFragment);
    }

    @Override
    public void injectMyGarageFragment(MyGarageFragment myGarageFragment) {
      injectMyGarageFragment2(myGarageFragment);
    }

    @Override
    public void injectCartFragment(CartFragment cartFragment) {
      injectCartFragment2(cartFragment);
    }

    @Override
    public void injectCheckoutFragment(CheckoutFragment checkoutFragment) {
      injectCheckoutFragment2(checkoutFragment);
    }

    @Override
    public void injectDeliveryDayAndWindowFragment(
        DeliveryDayAndWindowFragment deliveryDayAndWindowFragment) {
      injectDeliveryDayAndWindowFragment2(deliveryDayAndWindowFragment);
    }

    @Override
    public void injectQuantityAndDeliveryFragment(
        QuantityAndDeliveryFragment quantityAndDeliveryFragment) {
      injectQuantityAndDeliveryFragment2(quantityAndDeliveryFragment);
    }

    @Override
    public void injectChooseProfileFragment(ChooseProfileFragment chooseProfileFragment) {
      injectChooseProfileFragment2(chooseProfileFragment);
    }

    @Override
    public void injectKeyWordSearchFragment(KeyWordSearchFragment keyWordSearchFragment) {
      injectKeyWordSearchFragment2(keyWordSearchFragment);
    }

    @Override
    public void injectKeywordSearchResultsFragment(
        KeywordSearchResultsFragment keywordSearchResultsFragment) {
      injectKeywordSearchResultsFragment2(keywordSearchResultsFragment);
    }

    @Override
    public void injectLicencePlateFragment(LicencePlateFragment licencePlateFragment) {
      injectLicencePlateFragment2(licencePlateFragment);
    }

    @Override
    public void injectLoginFragment(LoginFragment loginFragment) {
      injectLoginFragment2(loginFragment);
    }

    @Override
    public void injectCreateMyListFragment(CreateMyListFragment createMyListFragment) {
      injectCreateMyListFragment2(createMyListFragment);
    }

    @Override
    public void injectFrequencyDialog(FrequencyDialog frequencyDialog) {
      injectFrequencyDialog2(frequencyDialog);
    }

    @Override
    public void injectMyListDetailsFragment(MyListDetailsFragment myListDetailsFragment) {
      injectMyListDetailsFragment2(myListDetailsFragment);
    }

    @Override
    public void injectMyListFragment(MyListFragment myListFragment) {
      injectMyListFragment2(myListFragment);
    }

    @Override
    public void injectProductDeliveryFragment(ProductDeliveryFragment productDeliveryFragment) {
      injectProductDeliveryFragment2(productDeliveryFragment);
    }

    @Override
    public void injectStreamLinedSearchFragment(
        StreamLinedSearchFragment streamLinedSearchFragment) {
      injectStreamLinedSearchFragment2(streamLinedSearchFragment);
    }

    @Override
    public void injectWelcomeToATDFragment(WelcomeToATDFragment welcomeToATDFragment) {
      injectWelcomeToATDFragment2(welcomeToATDFragment);
    }

    @Override
    public void injectProductFragment(ProductFragment productFragment) {
      injectProductFragment2(productFragment);
    }

    @Override
    public void injectTubesAndFlapsFragment(TubesAndFlapsFragment tubesAndFlapsFragment) {
      injectTubesAndFlapsFragment2(tubesAndFlapsFragment);
    }

    @Override
    public void injectSuppliesFragment(SuppliesFragment suppliesFragment) {
      injectSuppliesFragment2(suppliesFragment);
    }

    @Override
    public void injectTireRepairFragment(TireRepairFragment tireRepairFragment) {
      injectTireRepairFragment2(tireRepairFragment);
    }

    @Override
    public void injectTiresFragment(TiresFragment tiresFragment) {
      injectTiresFragment2(tiresFragment);
    }

    @Override
    public void injectTiresBrandFragment(TiresBrandFragment tiresBrandFragment) {
      injectTiresBrandFragment2(tiresBrandFragment);
    }

    @Override
    public void injectToolsFragment(ToolsFragment toolsFragment) {
      injectToolsFragment2(toolsFragment);
    }

    @Override
    public void injectWheelAccessoriesFragment(WheelAccessoriesFragment wheelAccessoriesFragment) {
      injectWheelAccessoriesFragment2(wheelAccessoriesFragment);
    }

    @Override
    public void injectWheelsFragment(WheelsFragment wheelsFragment) {
      injectWheelsFragment2(wheelsFragment);
    }

    @Override
    public void injectProductDetailsFragment(ProductDetailsFragment productDetailsFragment) {
      injectProductDetailsFragment2(productDetailsFragment);
    }

    @Override
    public void injectRebateFragment(RebateFragment rebateFragment) {
      injectRebateFragment2(rebateFragment);
    }

    @Override
    public void injectSelectLocation(SelectLocation selectLocation) {
      injectSelectLocation2(selectLocation);
    }

    @Override
    public void injectSplashFragment(SplashFragment splashFragment) {
      injectSplashFragment2(splashFragment);
    }

    @Override
    public void injectVehicleSearch(VehicleSearch vehicleSearch) {
      injectVehicleSearch2(vehicleSearch);
    }

    @Override
    public void injectMakeFragment(MakeFragment makeFragment) {
      injectMakeFragment2(makeFragment);
    }

    @Override
    public void injectModelFragment(ModelFragment modelFragment) {
      injectModelFragment2(modelFragment);
    }

    @Override
    public void injectOESizeFragment(OESizeFragment oESizeFragment) {
      injectOESizeFragment2(oESizeFragment);
    }

    @Override
    public void injectSizeFragment(SizeFragment sizeFragment) {
      injectSizeFragment2(sizeFragment);
    }

    @Override
    public void injectTrimFragment(TrimFragment trimFragment) {
      injectTrimFragment2(trimFragment);
    }

    @Override
    public void injectYearFragment(YearFragment yearFragment) {
      injectYearFragment2(yearFragment);
    }

    @Override
    public void injectVINFragment(VINFragment vINFragment) {
      injectVINFragment2(vINFragment);
    }

    @Override
    public DefaultViewModelFactories.InternalFactoryFactory getHiltInternalFactoryFactory() {
      return activityCImpl.getHiltInternalFactoryFactory();
    }

    @Override
    public ViewWithFragmentComponentBuilder viewWithFragmentComponentBuilder() {
      return new ViewWithFragmentCBuilder(singletonCImpl, activityRetainedCImpl, activityCImpl, fragmentCImpl);
    }

    @CanIgnoreReturnValue
    private BarcodeSearchFragment injectBarcodeSearchFragment2(BarcodeSearchFragment instance) {
      BarcodeSearchFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private BottomNavigationScreenFragment injectBottomNavigationScreenFragment2(
        BottomNavigationScreenFragment instance) {
      BottomNavigationScreenFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private AccountFragment injectAccountFragment2(AccountFragment instance) {
      AccountFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private PreferencesFragment injectPreferencesFragment2(PreferencesFragment instance) {
      PreferencesFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private ApprovalsFragment injectApprovalsFragment2(ApprovalsFragment instance) {
      ApprovalsFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private SubmitApprovalsFragment injectSubmitApprovalsFragment2(
        SubmitApprovalsFragment instance) {
      SubmitApprovalsFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private MyOrdersFragment injectMyOrdersFragment2(MyOrdersFragment instance) {
      MyOrdersFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private MyOrdersSearchFragment injectMyOrdersSearchFragment2(MyOrdersSearchFragment instance) {
      MyOrdersSearchFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private MyOrderDetailsFragment injectMyOrderDetailsFragment2(MyOrderDetailsFragment instance) {
      MyOrderDetailsFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      MyOrderDetailsFragment_MembersInjector.injectMyOrderApi(instance, singletonCImpl.provideOrderApiProvider.get());
      return instance;
    }

    @CanIgnoreReturnValue
    private DeleteQuoteFragment injectDeleteQuoteFragment2(DeleteQuoteFragment instance) {
      DeleteQuoteFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private EditQuoteFragment injectEditQuoteFragment2(EditQuoteFragment instance) {
      EditQuoteFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private MyQuotsFragment injectMyQuotsFragment2(MyQuotsFragment instance) {
      MyQuotsFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private ViewMyQuotesFragment injectViewMyQuotesFragment2(ViewMyQuotesFragment instance) {
      ViewMyQuotesFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private HomeTabFragment injectHomeTabFragment2(HomeTabFragment instance) {
      HomeTabFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private MyGarageFragment injectMyGarageFragment2(MyGarageFragment instance) {
      MyGarageFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private CartFragment injectCartFragment2(CartFragment instance) {
      CartFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private CheckoutFragment injectCheckoutFragment2(CheckoutFragment instance) {
      CheckoutFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private DeliveryDayAndWindowFragment injectDeliveryDayAndWindowFragment2(
        DeliveryDayAndWindowFragment instance) {
      DeliveryDayAndWindowFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private QuantityAndDeliveryFragment injectQuantityAndDeliveryFragment2(
        QuantityAndDeliveryFragment instance) {
      QuantityAndDeliveryFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private ChooseProfileFragment injectChooseProfileFragment2(ChooseProfileFragment instance) {
      ChooseProfileFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private KeyWordSearchFragment injectKeyWordSearchFragment2(KeyWordSearchFragment instance) {
      KeyWordSearchFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private KeywordSearchResultsFragment injectKeywordSearchResultsFragment2(
        KeywordSearchResultsFragment instance) {
      KeywordSearchResultsFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private LicencePlateFragment injectLicencePlateFragment2(LicencePlateFragment instance) {
      LicencePlateFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private LoginFragment injectLoginFragment2(LoginFragment instance) {
      LoginFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private CreateMyListFragment injectCreateMyListFragment2(CreateMyListFragment instance) {
      CreateMyListFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private FrequencyDialog injectFrequencyDialog2(FrequencyDialog instance) {
      FrequencyDialog_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private MyListDetailsFragment injectMyListDetailsFragment2(MyListDetailsFragment instance) {
      MyListDetailsFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private MyListFragment injectMyListFragment2(MyListFragment instance) {
      MyListFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private ProductDeliveryFragment injectProductDeliveryFragment2(
        ProductDeliveryFragment instance) {
      ProductDeliveryFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private StreamLinedSearchFragment injectStreamLinedSearchFragment2(
        StreamLinedSearchFragment instance) {
      StreamLinedSearchFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private WelcomeToATDFragment injectWelcomeToATDFragment2(WelcomeToATDFragment instance) {
      WelcomeToATDFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private ProductFragment injectProductFragment2(ProductFragment instance) {
      ProductFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private TubesAndFlapsFragment injectTubesAndFlapsFragment2(TubesAndFlapsFragment instance) {
      TubesAndFlapsFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private SuppliesFragment injectSuppliesFragment2(SuppliesFragment instance) {
      SuppliesFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private TireRepairFragment injectTireRepairFragment2(TireRepairFragment instance) {
      TireRepairFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private TiresFragment injectTiresFragment2(TiresFragment instance) {
      TiresFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private TiresBrandFragment injectTiresBrandFragment2(TiresBrandFragment instance) {
      TiresBrandFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private ToolsFragment injectToolsFragment2(ToolsFragment instance) {
      ToolsFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private WheelAccessoriesFragment injectWheelAccessoriesFragment2(
        WheelAccessoriesFragment instance) {
      WheelAccessoriesFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private WheelsFragment injectWheelsFragment2(WheelsFragment instance) {
      WheelsFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private ProductDetailsFragment injectProductDetailsFragment2(ProductDetailsFragment instance) {
      ProductDetailsFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private RebateFragment injectRebateFragment2(RebateFragment instance) {
      RebateFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private SelectLocation injectSelectLocation2(SelectLocation instance) {
      SelectLocation_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private SplashFragment injectSplashFragment2(SplashFragment instance) {
      SplashFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private VehicleSearch injectVehicleSearch2(VehicleSearch instance) {
      VehicleSearch_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private MakeFragment injectMakeFragment2(MakeFragment instance) {
      MakeFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private ModelFragment injectModelFragment2(ModelFragment instance) {
      ModelFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private OESizeFragment injectOESizeFragment2(OESizeFragment instance) {
      OESizeFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private SizeFragment injectSizeFragment2(SizeFragment instance) {
      SizeFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private TrimFragment injectTrimFragment2(TrimFragment instance) {
      TrimFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private YearFragment injectYearFragment2(YearFragment instance) {
      YearFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private VINFragment injectVINFragment2(VINFragment instance) {
      VINFragment_MembersInjector.injectSharedPrefManager(instance, activityCImpl.sharedPrefManager());
      return instance;
    }
  }

  private static final class ViewCImpl extends AtdMobileApplication_HiltComponents.ViewC {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl;

    private final ActivityCImpl activityCImpl;

    private final ViewCImpl viewCImpl = this;

    private ViewCImpl(SingletonCImpl singletonCImpl, ActivityRetainedCImpl activityRetainedCImpl,
        ActivityCImpl activityCImpl, View viewParam) {
      this.singletonCImpl = singletonCImpl;
      this.activityRetainedCImpl = activityRetainedCImpl;
      this.activityCImpl = activityCImpl;


    }
  }

  private static final class ActivityCImpl extends AtdMobileApplication_HiltComponents.ActivityC {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl;

    private final ActivityCImpl activityCImpl = this;

    private ActivityCImpl(SingletonCImpl singletonCImpl,
        ActivityRetainedCImpl activityRetainedCImpl, Activity activityParam) {
      this.singletonCImpl = singletonCImpl;
      this.activityRetainedCImpl = activityRetainedCImpl;


    }

    private SharedPrefManager sharedPrefManager() {
      return new SharedPrefManager(ApplicationContextModule_ProvideContextFactory.provideContext(singletonCImpl.applicationContextModule));
    }

    @Override
    public void injectMainActivity(MainActivity mainActivity) {
      injectMainActivity2(mainActivity);
    }

    @Override
    public void injectOCRLicencePlate(OCRLicencePlate oCRLicencePlate) {
      injectOCRLicencePlate2(oCRLicencePlate);
    }

    @Override
    public void injectBarcodeFragment(BarcodeFragment barcodeFragment) {
      injectBarcodeFragment2(barcodeFragment);
    }

    @Override
    public DefaultViewModelFactories.InternalFactoryFactory getHiltInternalFactoryFactory() {
      return DefaultViewModelFactories_InternalFactoryFactory_Factory.newInstance(getViewModelKeys(), new ViewModelCBuilder(singletonCImpl, activityRetainedCImpl));
    }

    @Override
    public Set<String> getViewModelKeys() {
      return ImmutableSet.<String>of(AccountViewModel_HiltModules_KeyModule_ProvideFactory.provide(), CartViewModel_HiltModules_KeyModule_ProvideFactory.provide(), CheckoutViewModel_HiltModules_KeyModule_ProvideFactory.provide(), ConfigLocationViewModel_HiltModules_KeyModule_ProvideFactory.provide(), CutOffTimesViewModel_HiltModules_KeyModule_ProvideFactory.provide(), DeliveryDayAndWindowViewModel_HiltModules_KeyModule_ProvideFactory.provide(), HomeViewModel_HiltModules_KeyModule_ProvideFactory.provide(), LicencePlateViewModel_HiltModules_KeyModule_ProvideFactory.provide(), LoginViewModel_HiltModules_KeyModule_ProvideFactory.provide(), MainViewModel_HiltModules_KeyModule_ProvideFactory.provide(), MyApprovalsViewModel_HiltModules_KeyModule_ProvideFactory.provide(), MyListViewModel_HiltModules_KeyModule_ProvideFactory.provide(), MyOrderDetailsViewModel_HiltModules_KeyModule_ProvideFactory.provide(), MyOrdersViewModel_HiltModules_KeyModule_ProvideFactory.provide(), MyQuotesViewModel_HiltModules_KeyModule_ProvideFactory.provide(), ProductByKeywordViewModel_HiltModules_KeyModule_ProvideFactory.provide(), ProductViewModel_HiltModules_KeyModule_ProvideFactory.provide(), QuantityAndDeliveryViewModel_HiltModules_KeyModule_ProvideFactory.provide(), RMDConfigLocationViewModel_HiltModules_KeyModule_ProvideFactory.provide(), RecentKeywordSearchViewModel_HiltModules_KeyModule_ProvideFactory.provide(), SelectLocationViewModel_HiltModules_KeyModule_ProvideFactory.provide(), SubmitApprovalsViewModel_HiltModules_KeyModule_ProvideFactory.provide(), TiresBrandsViewModel_HiltModules_KeyModule_ProvideFactory.provide(), VehicleViewModel_HiltModules_KeyModule_ProvideFactory.provide(), VinViewModel_HiltModules_KeyModule_ProvideFactory.provide());
    }

    @Override
    public ViewModelComponentBuilder getViewModelComponentBuilder() {
      return new ViewModelCBuilder(singletonCImpl, activityRetainedCImpl);
    }

    @Override
    public FragmentComponentBuilder fragmentComponentBuilder() {
      return new FragmentCBuilder(singletonCImpl, activityRetainedCImpl, activityCImpl);
    }

    @Override
    public ViewComponentBuilder viewComponentBuilder() {
      return new ViewCBuilder(singletonCImpl, activityRetainedCImpl, activityCImpl);
    }

    @CanIgnoreReturnValue
    private MainActivity injectMainActivity2(MainActivity instance) {
      MainActivity_MembersInjector.injectSharedPrefManager(instance, sharedPrefManager());
      MainActivity_MembersInjector.injectFirestoreRepository(instance, singletonCImpl.firestoreRepositoryProvider.get());
      return instance;
    }

    @CanIgnoreReturnValue
    private OCRLicencePlate injectOCRLicencePlate2(OCRLicencePlate instance) {
      OCRLicencePlate_MembersInjector.injectSharedPrefManager(instance, sharedPrefManager());
      return instance;
    }

    @CanIgnoreReturnValue
    private BarcodeFragment injectBarcodeFragment2(BarcodeFragment instance) {
      BarcodeFragment_MembersInjector.injectSharedPrefManager(instance, sharedPrefManager());
      return instance;
    }
  }

  private static final class ViewModelCImpl extends AtdMobileApplication_HiltComponents.ViewModelC {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl;

    private final ViewModelCImpl viewModelCImpl = this;

    private Provider<AccountViewModel> accountViewModelProvider;

    private Provider<CartViewModel> cartViewModelProvider;

    private Provider<CheckoutViewModel> checkoutViewModelProvider;

    private Provider<ConfigLocationViewModel> configLocationViewModelProvider;

    private Provider<CutOffTimesViewModel> cutOffTimesViewModelProvider;

    private Provider<DeliveryDayAndWindowViewModel> deliveryDayAndWindowViewModelProvider;

    private Provider<HomeViewModel> homeViewModelProvider;

    private Provider<LicencePlateViewModel> licencePlateViewModelProvider;

    private Provider<LoginViewModel> loginViewModelProvider;

    private Provider<MainViewModel> mainViewModelProvider;

    private Provider<MyApprovalsViewModel> myApprovalsViewModelProvider;

    private Provider<MyListViewModel> myListViewModelProvider;

    private Provider<MyOrderDetailsViewModel> myOrderDetailsViewModelProvider;

    private Provider<MyOrdersViewModel> myOrdersViewModelProvider;

    private Provider<MyQuotesViewModel> myQuotesViewModelProvider;

    private Provider<ProductByKeywordViewModel> productByKeywordViewModelProvider;

    private Provider<ProductViewModel> productViewModelProvider;

    private Provider<QuantityAndDeliveryViewModel> quantityAndDeliveryViewModelProvider;

    private Provider<RMDConfigLocationViewModel> rMDConfigLocationViewModelProvider;

    private Provider<RecentKeywordSearchViewModel> recentKeywordSearchViewModelProvider;

    private Provider<SelectLocationViewModel> selectLocationViewModelProvider;

    private Provider<SubmitApprovalsViewModel> submitApprovalsViewModelProvider;

    private Provider<TiresBrandsViewModel> tiresBrandsViewModelProvider;

    private Provider<VehicleViewModel> vehicleViewModelProvider;

    private Provider<VinViewModel> vinViewModelProvider;

    private ViewModelCImpl(SingletonCImpl singletonCImpl,
        ActivityRetainedCImpl activityRetainedCImpl, SavedStateHandle savedStateHandleParam,
        ViewModelLifecycle viewModelLifecycleParam) {
      this.singletonCImpl = singletonCImpl;
      this.activityRetainedCImpl = activityRetainedCImpl;

      initialize(savedStateHandleParam, viewModelLifecycleParam);

    }

    private MyOrderRepository myOrderRepository() {
      return new MyOrderRepository(singletonCImpl.provideOrderApiProvider.get());
    }

    private ConfigLocationRepository configLocationRepository() {
      return new ConfigLocationRepository(singletonCImpl.provideUserApiProvider.get());
    }

    private CutOffDateRepository cutOffDateRepository() {
      return new CutOffDateRepository(singletonCImpl.provideLocationApiProvider.get());
    }

    private DeliveriesRepository deliveriesRepository() {
      return new DeliveriesRepository(singletonCImpl.provideDeliveriesApiProvider.get());
    }

    private LocationRepository locationRepository() {
      return new LocationRepository(singletonCImpl.provideLocationApiProvider.get());
    }

    private VehiclesRepository vehiclesRepository() {
      return new VehiclesRepository(singletonCImpl.provideVehiclesApiProvider.get());
    }

    private UserRepository userRepository() {
      return new UserRepository(singletonCImpl.provideUserApiProvider.get());
    }

    private PermissionsRepository permissionsRepository() {
      return new PermissionsRepository(singletonCImpl.providePermissionsDaoProvider.get());
    }

    private MyApprovalsRepository myApprovalsRepository() {
      return new MyApprovalsRepository(singletonCImpl.provideOrderApiProvider.get());
    }

    private MyListRepository myListRepository() {
      return new MyListRepository(singletonCImpl.provideListApiProvider.get());
    }

    private MyOrderDetailsRepository myOrderDetailsRepository() {
      return new MyOrderDetailsRepository(singletonCImpl.provideOrderApiProvider.get());
    }

    private OrderReturnAvailableDetailsRepository orderReturnAvailableDetailsRepository() {
      return new OrderReturnAvailableDetailsRepository(singletonCImpl.provideOrderApiProvider.get());
    }

    private MyQuotesRepository myQuotesRepository() {
      return new MyQuotesRepository(singletonCImpl.provideQuotesApiProvider.get());
    }

    private ProductByKeywordRepository productByKeywordRepository() {
      return new ProductByKeywordRepository(singletonCImpl.provideProductsApiProvider.get());
    }

    private ProductsRepository productsRepository() {
      return new ProductsRepository(singletonCImpl.provideProductsApiProvider.get());
    }

    private CustomerRepository customerRepository() {
      return new CustomerRepository(singletonCImpl.provideCustomerApiProvider.get());
    }

    private RDBConfigLocationsRepository rDBConfigLocationsRepository() {
      return new RDBConfigLocationsRepository(singletonCImpl.provideConfigLocationDaoProvider.get());
    }

    private RDBKeywordSearchRepository rDBKeywordSearchRepository() {
      return new RDBKeywordSearchRepository(singletonCImpl.provideDaoProvider.get());
    }

    private ApproveRejectOrderRepository approveRejectOrderRepository() {
      return new ApproveRejectOrderRepository(singletonCImpl.provideOrderApiProvider.get());
    }

    private LocationConfigurationRepository locationConfigurationRepository() {
      return new LocationConfigurationRepository(singletonCImpl.provideConfigLocationDaoProvider.get());
    }

    @SuppressWarnings("unchecked")
    private void initialize(final SavedStateHandle savedStateHandleParam,
        final ViewModelLifecycle viewModelLifecycleParam) {
      this.accountViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 0);
      this.cartViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 1);
      this.checkoutViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 2);
      this.configLocationViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 3);
      this.cutOffTimesViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 4);
      this.deliveryDayAndWindowViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 5);
      this.homeViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 6);
      this.licencePlateViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 7);
      this.loginViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 8);
      this.mainViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 9);
      this.myApprovalsViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 10);
      this.myListViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 11);
      this.myOrderDetailsViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 12);
      this.myOrdersViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 13);
      this.myQuotesViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 14);
      this.productByKeywordViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 15);
      this.productViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 16);
      this.quantityAndDeliveryViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 17);
      this.rMDConfigLocationViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 18);
      this.recentKeywordSearchViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 19);
      this.selectLocationViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 20);
      this.submitApprovalsViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 21);
      this.tiresBrandsViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 22);
      this.vehicleViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 23);
      this.vinViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 24);
    }

    @Override
    public Map<String, Provider<ViewModel>> getHiltViewModelMap() {
      return ImmutableMap.<String, Provider<ViewModel>>builderWithExpectedSize(25).put("com.atd.atdmobileapp.ui.bottomnavigation.account.AccountViewModel", ((Provider) accountViewModelProvider)).put("com.atd.atdmobileapp.ui.cart.CartViewModel", ((Provider) cartViewModelProvider)).put("com.atd.atdmobileapp.ui.cart.checkout.CheckoutViewModel", ((Provider) checkoutViewModelProvider)).put("com.atd.atdmobileapp.ui.bottomnavigation.ConfigLocationViewModel", ((Provider) configLocationViewModelProvider)).put("com.atd.atdmobileapp.ui.keywordsearch.keywordsearchresults.CutOffTimesViewModel", ((Provider) cutOffTimesViewModelProvider)).put("com.atd.atdmobileapp.ui.cart.deliverydayandwindow.DeliveryDayAndWindowViewModel", ((Provider) deliveryDayAndWindowViewModelProvider)).put("com.atd.atdmobileapp.ui.bottomnavigation.homescreen.HomeViewModel", ((Provider) homeViewModelProvider)).put("com.atd.atdmobileapp.ui.licenceplate.LicencePlateViewModel", ((Provider) licencePlateViewModelProvider)).put("com.atd.atdmobileapp.ui.login.LoginViewModel", ((Provider) loginViewModelProvider)).put("com.atd.atdmobileapp.MainViewModel", ((Provider) mainViewModelProvider)).put("com.atd.atdmobileapp.ui.bottomnavigation.homescreen.approvals.MyApprovalsViewModel", ((Provider) myApprovalsViewModelProvider)).put("com.atd.atdmobileapp.ui.mylists.MyListViewModel", ((Provider) myListViewModelProvider)).put("com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myorders.myorderdetails.MyOrderDetailsViewModel", ((Provider) myOrderDetailsViewModelProvider)).put("com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myorders.MyOrdersViewModel", ((Provider) myOrdersViewModelProvider)).put("com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myquotes.MyQuotesViewModel", ((Provider) myQuotesViewModelProvider)).put("com.atd.atdmobileapp.ui.keywordsearch.keywordsearchresults.ProductByKeywordViewModel", ((Provider) productByKeywordViewModelProvider)).put("com.atd.atdmobileapp.ui.product.ProductViewModel", ((Provider) productViewModelProvider)).put("com.atd.atdmobileapp.ui.cart.quantityanddelivery.QuantityAndDeliveryViewModel", ((Provider) quantityAndDeliveryViewModelProvider)).put("com.atd.atdmobileapp.ui.bottomnavigation.RMDConfigLocationViewModel", ((Provider) rMDConfigLocationViewModelProvider)).put("com.atd.atdmobileapp.ui.keywordsearch.keywordrecentsearches.RecentKeywordSearchViewModel", ((Provider) recentKeywordSearchViewModelProvider)).put("com.atd.atdmobileapp.ui.selectlocation.SelectLocationViewModel", ((Provider) selectLocationViewModelProvider)).put("com.atd.atdmobileapp.ui.bottomnavigation.homescreen.approvals.submitaprovals.SubmitApprovalsViewModel", ((Provider) submitApprovalsViewModelProvider)).put("com.atd.atdmobileapp.ui.product.tires.brands.TiresBrandsViewModel", ((Provider) tiresBrandsViewModelProvider)).put("com.atd.atdmobileapp.ui.vehicle.VehicleViewModel", ((Provider) vehicleViewModelProvider)).put("com.atd.atdmobileapp.ui.vin.VinViewModel", ((Provider) vinViewModelProvider)).build();
    }

    private static final class SwitchingProvider<T> implements Provider<T> {
      private final SingletonCImpl singletonCImpl;

      private final ActivityRetainedCImpl activityRetainedCImpl;

      private final ViewModelCImpl viewModelCImpl;

      private final int id;

      SwitchingProvider(SingletonCImpl singletonCImpl, ActivityRetainedCImpl activityRetainedCImpl,
          ViewModelCImpl viewModelCImpl, int id) {
        this.singletonCImpl = singletonCImpl;
        this.activityRetainedCImpl = activityRetainedCImpl;
        this.viewModelCImpl = viewModelCImpl;
        this.id = id;
      }

      @SuppressWarnings("unchecked")
      @Override
      public T get() {
        switch (id) {
          case 0: // com.atd.atdmobileapp.ui.bottomnavigation.account.AccountViewModel 
          return (T) new AccountViewModel(singletonCImpl.sharedPrefManager());

          case 1: // com.atd.atdmobileapp.ui.cart.CartViewModel 
          return (T) new CartViewModel(singletonCImpl.firestoreRepositoryProvider.get(), viewModelCImpl.myOrderRepository());

          case 2: // com.atd.atdmobileapp.ui.cart.checkout.CheckoutViewModel 
          return (T) new CheckoutViewModel(viewModelCImpl.myOrderRepository(), singletonCImpl.firestoreRepositoryProvider.get());

          case 3: // com.atd.atdmobileapp.ui.bottomnavigation.ConfigLocationViewModel 
          return (T) new ConfigLocationViewModel(viewModelCImpl.configLocationRepository(), singletonCImpl.firestoreRepositoryProvider.get(), viewModelCImpl.cutOffDateRepository());

          case 4: // com.atd.atdmobileapp.ui.keywordsearch.keywordsearchresults.CutOffTimesViewModel 
          return (T) new CutOffTimesViewModel();

          case 5: // com.atd.atdmobileapp.ui.cart.deliverydayandwindow.DeliveryDayAndWindowViewModel 
          return (T) new DeliveryDayAndWindowViewModel(viewModelCImpl.deliveriesRepository());

          case 6: // com.atd.atdmobileapp.ui.bottomnavigation.homescreen.HomeViewModel 
          return (T) new HomeViewModel(viewModelCImpl.locationRepository());

          case 7: // com.atd.atdmobileapp.ui.licenceplate.LicencePlateViewModel 
          return (T) new LicencePlateViewModel(viewModelCImpl.vehiclesRepository());

          case 8: // com.atd.atdmobileapp.ui.login.LoginViewModel 
          return (T) new LoginViewModel(viewModelCImpl.userRepository(), viewModelCImpl.permissionsRepository(), singletonCImpl.provideProvider.get());

          case 9: // com.atd.atdmobileapp.MainViewModel 
          return (T) new MainViewModel(ApplicationContextModule_ProvideContextFactory.provideContext(singletonCImpl.applicationContextModule));

          case 10: // com.atd.atdmobileapp.ui.bottomnavigation.homescreen.approvals.MyApprovalsViewModel 
          return (T) new MyApprovalsViewModel(viewModelCImpl.myApprovalsRepository());

          case 11: // com.atd.atdmobileapp.ui.mylists.MyListViewModel 
          return (T) new MyListViewModel(viewModelCImpl.myListRepository());

          case 12: // com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myorders.myorderdetails.MyOrderDetailsViewModel 
          return (T) new MyOrderDetailsViewModel(viewModelCImpl.myOrderDetailsRepository(), viewModelCImpl.orderReturnAvailableDetailsRepository());

          case 13: // com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myorders.MyOrdersViewModel 
          return (T) new MyOrdersViewModel(viewModelCImpl.myOrderRepository());

          case 14: // com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myquotes.MyQuotesViewModel 
          return (T) new MyQuotesViewModel(viewModelCImpl.myQuotesRepository());

          case 15: // com.atd.atdmobileapp.ui.keywordsearch.keywordsearchresults.ProductByKeywordViewModel 
          return (T) new ProductByKeywordViewModel(viewModelCImpl.productByKeywordRepository());

          case 16: // com.atd.atdmobileapp.ui.product.ProductViewModel 
          return (T) new ProductViewModel(viewModelCImpl.productsRepository());

          case 17: // com.atd.atdmobileapp.ui.cart.quantityanddelivery.QuantityAndDeliveryViewModel 
          return (T) new QuantityAndDeliveryViewModel(viewModelCImpl.deliveriesRepository(), viewModelCImpl.customerRepository(), viewModelCImpl.myOrderRepository(), singletonCImpl.firestoreRepositoryProvider.get());

          case 18: // com.atd.atdmobileapp.ui.bottomnavigation.RMDConfigLocationViewModel 
          return (T) new RMDConfigLocationViewModel(viewModelCImpl.rDBConfigLocationsRepository());

          case 19: // com.atd.atdmobileapp.ui.keywordsearch.keywordrecentsearches.RecentKeywordSearchViewModel 
          return (T) new RecentKeywordSearchViewModel(viewModelCImpl.rDBKeywordSearchRepository(), singletonCImpl.firestoreRepositoryProvider.get());

          case 20: // com.atd.atdmobileapp.ui.selectlocation.SelectLocationViewModel 
          return (T) new SelectLocationViewModel(viewModelCImpl.locationRepository());

          case 21: // com.atd.atdmobileapp.ui.bottomnavigation.homescreen.approvals.submitaprovals.SubmitApprovalsViewModel 
          return (T) new SubmitApprovalsViewModel(viewModelCImpl.approveRejectOrderRepository());

          case 22: // com.atd.atdmobileapp.ui.product.tires.brands.TiresBrandsViewModel 
          return (T) new TiresBrandsViewModel(viewModelCImpl.productsRepository(), viewModelCImpl.locationConfigurationRepository());

          case 23: // com.atd.atdmobileapp.ui.vehicle.VehicleViewModel 
          return (T) new VehicleViewModel(viewModelCImpl.vehiclesRepository());

          case 24: // com.atd.atdmobileapp.ui.vin.VinViewModel 
          return (T) new VinViewModel(viewModelCImpl.vehiclesRepository());

          default: throw new AssertionError(id);
        }
      }
    }
  }

  private static final class ActivityRetainedCImpl extends AtdMobileApplication_HiltComponents.ActivityRetainedC {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl = this;

    private Provider<ActivityRetainedLifecycle> provideActivityRetainedLifecycleProvider;

    private ActivityRetainedCImpl(SingletonCImpl singletonCImpl) {
      this.singletonCImpl = singletonCImpl;

      initialize();

    }

    @SuppressWarnings("unchecked")
    private void initialize() {
      this.provideActivityRetainedLifecycleProvider = DoubleCheck.provider(new SwitchingProvider<ActivityRetainedLifecycle>(singletonCImpl, activityRetainedCImpl, 0));
    }

    @Override
    public ActivityComponentBuilder activityComponentBuilder() {
      return new ActivityCBuilder(singletonCImpl, activityRetainedCImpl);
    }

    @Override
    public ActivityRetainedLifecycle getActivityRetainedLifecycle() {
      return provideActivityRetainedLifecycleProvider.get();
    }

    private static final class SwitchingProvider<T> implements Provider<T> {
      private final SingletonCImpl singletonCImpl;

      private final ActivityRetainedCImpl activityRetainedCImpl;

      private final int id;

      SwitchingProvider(SingletonCImpl singletonCImpl, ActivityRetainedCImpl activityRetainedCImpl,
          int id) {
        this.singletonCImpl = singletonCImpl;
        this.activityRetainedCImpl = activityRetainedCImpl;
        this.id = id;
      }

      @SuppressWarnings("unchecked")
      @Override
      public T get() {
        switch (id) {
          case 0: // dagger.hilt.android.ActivityRetainedLifecycle 
          return (T) ActivityRetainedComponentManager_LifecycleModule_ProvideActivityRetainedLifecycleFactory.provideActivityRetainedLifecycle();

          default: throw new AssertionError(id);
        }
      }
    }
  }

  private static final class ServiceCImpl extends AtdMobileApplication_HiltComponents.ServiceC {
    private final SingletonCImpl singletonCImpl;

    private final ServiceCImpl serviceCImpl = this;

    private ServiceCImpl(SingletonCImpl singletonCImpl, Service serviceParam) {
      this.singletonCImpl = singletonCImpl;


    }
  }

  private static final class SingletonCImpl extends AtdMobileApplication_HiltComponents.SingletonC {
    private final ApplicationContextModule applicationContextModule;

    private final NetworkModule networkModule;

    private final SingletonCImpl singletonCImpl = this;

    private Provider<FirebaseFirestore> provideFirebaseFirestoreProvider;

    private Provider<FirestoreRepository> firestoreRepositoryProvider;

    private Provider<retrofit2.Retrofit.Builder> provideRetrofitBuilderProvider;

    private Provider<Context> provideApplicationContextProvider;

    private Provider<CertificateHelper> provideCertificateHelperProvider;

    private Provider<OkHttpClient> provideOkhttpClientProvider;

    private Provider<OrderApi> provideOrderApiProvider;

    private Provider<UserApi> provideUserApiProvider;

    private Provider<LocationApi> provideLocationApiProvider;

    private Provider<DeliveriesApi> provideDeliveriesApiProvider;

    private Provider<VehiclesApi> provideVehiclesApiProvider;

    private Provider<ATDRoomDatabase> provideProvider;

    private Provider<PermissionsDAO> providePermissionsDaoProvider;

    private Provider<ListApi> provideListApiProvider;

    private Provider<MyQuotesApi> provideQuotesApiProvider;

    private Provider<ProductsApi> provideProductsApiProvider;

    private Provider<CustomerApi> provideCustomerApiProvider;

    private Provider<ConfigLocationsDAO> provideConfigLocationDaoProvider;

    private Provider<PreviousKeywordSearchDAO> provideDaoProvider;

    private SingletonCImpl(ApplicationContextModule applicationContextModuleParam,
        NetworkModule networkModuleParam) {
      this.applicationContextModule = applicationContextModuleParam;
      this.networkModule = networkModuleParam;
      initialize(applicationContextModuleParam, networkModuleParam);

    }

    private SharedPrefManager sharedPrefManager() {
      return new SharedPrefManager(ApplicationContextModule_ProvideContextFactory.provideContext(applicationContextModule));
    }

    private AuthInterceptor authInterceptor() {
      return injectAuthInterceptor(AuthInterceptor_Factory.newInstance(ApplicationContextModule_ProvideContextFactory.provideContext(applicationContextModule)));
    }

    @SuppressWarnings("unchecked")
    private void initialize(final ApplicationContextModule applicationContextModuleParam,
        final NetworkModule networkModuleParam) {
      this.provideFirebaseFirestoreProvider = DoubleCheck.provider(new SwitchingProvider<FirebaseFirestore>(singletonCImpl, 1));
      this.firestoreRepositoryProvider = DoubleCheck.provider(new SwitchingProvider<FirestoreRepository>(singletonCImpl, 0));
      this.provideRetrofitBuilderProvider = DoubleCheck.provider(new SwitchingProvider<retrofit2.Retrofit.Builder>(singletonCImpl, 3));
      this.provideApplicationContextProvider = DoubleCheck.provider(new SwitchingProvider<Context>(singletonCImpl, 6));
      this.provideCertificateHelperProvider = DoubleCheck.provider(new SwitchingProvider<CertificateHelper>(singletonCImpl, 5));
      this.provideOkhttpClientProvider = DoubleCheck.provider(new SwitchingProvider<OkHttpClient>(singletonCImpl, 4));
      this.provideOrderApiProvider = DoubleCheck.provider(new SwitchingProvider<OrderApi>(singletonCImpl, 2));
      this.provideUserApiProvider = DoubleCheck.provider(new SwitchingProvider<UserApi>(singletonCImpl, 7));
      this.provideLocationApiProvider = DoubleCheck.provider(new SwitchingProvider<LocationApi>(singletonCImpl, 8));
      this.provideDeliveriesApiProvider = DoubleCheck.provider(new SwitchingProvider<DeliveriesApi>(singletonCImpl, 9));
      this.provideVehiclesApiProvider = DoubleCheck.provider(new SwitchingProvider<VehiclesApi>(singletonCImpl, 10));
      this.provideProvider = DoubleCheck.provider(new SwitchingProvider<ATDRoomDatabase>(singletonCImpl, 12));
      this.providePermissionsDaoProvider = DoubleCheck.provider(new SwitchingProvider<PermissionsDAO>(singletonCImpl, 11));
      this.provideListApiProvider = DoubleCheck.provider(new SwitchingProvider<ListApi>(singletonCImpl, 13));
      this.provideQuotesApiProvider = DoubleCheck.provider(new SwitchingProvider<MyQuotesApi>(singletonCImpl, 14));
      this.provideProductsApiProvider = DoubleCheck.provider(new SwitchingProvider<ProductsApi>(singletonCImpl, 15));
      this.provideCustomerApiProvider = DoubleCheck.provider(new SwitchingProvider<CustomerApi>(singletonCImpl, 16));
      this.provideConfigLocationDaoProvider = DoubleCheck.provider(new SwitchingProvider<ConfigLocationsDAO>(singletonCImpl, 17));
      this.provideDaoProvider = DoubleCheck.provider(new SwitchingProvider<PreviousKeywordSearchDAO>(singletonCImpl, 18));
    }

    @Override
    public void injectAtdMobileApplication(AtdMobileApplication atdMobileApplication) {
    }

    @Override
    public Set<Boolean> getDisableFragmentGetContextFix() {
      return ImmutableSet.<Boolean>of();
    }

    @Override
    public ActivityRetainedComponentBuilder retainedComponentBuilder() {
      return new ActivityRetainedCBuilder(singletonCImpl);
    }

    @Override
    public ServiceComponentBuilder serviceComponentBuilder() {
      return new ServiceCBuilder(singletonCImpl);
    }

    @CanIgnoreReturnValue
    private AuthInterceptor injectAuthInterceptor(AuthInterceptor instance) {
      AuthInterceptor_MembersInjector.injectSharedPrefManager(instance, sharedPrefManager());
      return instance;
    }

    private static final class SwitchingProvider<T> implements Provider<T> {
      private final SingletonCImpl singletonCImpl;

      private final int id;

      SwitchingProvider(SingletonCImpl singletonCImpl, int id) {
        this.singletonCImpl = singletonCImpl;
        this.id = id;
      }

      @SuppressWarnings("unchecked")
      @Override
      public T get() {
        switch (id) {
          case 0: // com.atd.atdmobileapp.utils.FirestoreRepository 
          return (T) new FirestoreRepository(singletonCImpl.provideFirebaseFirestoreProvider.get(), singletonCImpl.sharedPrefManager());

          case 1: // com.google.firebase.firestore.FirebaseFirestore 
          return (T) FirebaseModule_ProvideFirebaseFirestoreFactory.provideFirebaseFirestore();

          case 2: // com.atd.atdmobileapp.api.OrderApi 
          return (T) NetworkModule_ProvideOrderApiFactory.provideOrderApi(singletonCImpl.networkModule, singletonCImpl.provideRetrofitBuilderProvider.get(), singletonCImpl.provideOkhttpClientProvider.get());

          case 3: // retrofit2.Retrofit.Builder 
          return (T) NetworkModule_ProvideRetrofitBuilderFactory.provideRetrofitBuilder(singletonCImpl.networkModule);

          case 4: // okhttp3.OkHttpClient 
          return (T) NetworkModule_ProvideOkhttpClientFactory.provideOkhttpClient(singletonCImpl.networkModule, singletonCImpl.authInterceptor(), singletonCImpl.provideCertificateHelperProvider.get());

          case 5: // com.atd.atdmobileapp.utils.CertificateHelper 
          return (T) NetworkModule_ProvideCertificateHelperFactory.provideCertificateHelper(singletonCImpl.networkModule, singletonCImpl.provideApplicationContextProvider.get());

          case 6: // android.content.Context 
          return (T) NetworkModule_ProvideApplicationContextFactory.provideApplicationContext(singletonCImpl.networkModule, ApplicationContextModule_ProvideApplicationFactory.provideApplication(singletonCImpl.applicationContextModule));

          case 7: // com.atd.atdmobileapp.api.UserApi 
          return (T) NetworkModule_ProvideUserApiFactory.provideUserApi(singletonCImpl.networkModule, singletonCImpl.provideRetrofitBuilderProvider.get(), singletonCImpl.provideOkhttpClientProvider.get());

          case 8: // com.atd.atdmobileapp.api.LocationApi 
          return (T) NetworkModule_ProvideLocationApiFactory.provideLocationApi(singletonCImpl.networkModule, singletonCImpl.provideRetrofitBuilderProvider.get(), singletonCImpl.provideOkhttpClientProvider.get());

          case 9: // com.atd.atdmobileapp.api.DeliveriesApi 
          return (T) NetworkModule_ProvideDeliveriesApiFactory.provideDeliveriesApi(singletonCImpl.networkModule, singletonCImpl.provideRetrofitBuilderProvider.get(), singletonCImpl.provideOkhttpClientProvider.get());

          case 10: // com.atd.atdmobileapp.api.VehiclesApi 
          return (T) NetworkModule_ProvideVehiclesApiFactory.provideVehiclesApi(singletonCImpl.networkModule, singletonCImpl.provideRetrofitBuilderProvider.get(), singletonCImpl.provideOkhttpClientProvider.get());

          case 11: // com.atd.atdmobileapp.roomdatabase.permissions.PermissionsDAO 
          return (T) DbModule_ProvidePermissionsDaoFactory.providePermissionsDao(singletonCImpl.provideProvider.get());

          case 12: // com.atd.atdmobileapp.roomdatabase.ATDRoomDatabase 
          return (T) DbModule_ProvideFactory.provide(ApplicationContextModule_ProvideContextFactory.provideContext(singletonCImpl.applicationContextModule));

          case 13: // com.atd.atdmobileapp.api.ListApi 
          return (T) NetworkModule_ProvideListApiFactory.provideListApi(singletonCImpl.networkModule, singletonCImpl.provideRetrofitBuilderProvider.get(), singletonCImpl.provideOkhttpClientProvider.get());

          case 14: // com.atd.atdmobileapp.api.MyQuotesApi 
          return (T) NetworkModule_ProvideQuotesApiFactory.provideQuotesApi(singletonCImpl.networkModule, singletonCImpl.provideRetrofitBuilderProvider.get(), singletonCImpl.provideOkhttpClientProvider.get());

          case 15: // com.atd.atdmobileapp.api.ProductsApi 
          return (T) NetworkModule_ProvideProductsApiFactory.provideProductsApi(singletonCImpl.networkModule, singletonCImpl.provideRetrofitBuilderProvider.get(), singletonCImpl.provideOkhttpClientProvider.get());

          case 16: // com.atd.atdmobileapp.api.CustomerApi 
          return (T) NetworkModule_ProvideCustomerApiFactory.provideCustomerApi(singletonCImpl.networkModule, singletonCImpl.provideRetrofitBuilderProvider.get(), singletonCImpl.provideOkhttpClientProvider.get());

          case 17: // com.atd.atdmobileapp.roomdatabase.configlocations.ConfigLocationsDAO 
          return (T) DbModule_ProvideConfigLocationDaoFactory.provideConfigLocationDao(singletonCImpl.provideProvider.get());

          case 18: // com.atd.atdmobileapp.roomdatabase.keywordsearch.PreviousKeywordSearchDAO 
          return (T) DbModule_ProvideDaoFactory.provideDao(singletonCImpl.provideProvider.get());

          default: throw new AssertionError(id);
        }
      }
    }
  }
}
