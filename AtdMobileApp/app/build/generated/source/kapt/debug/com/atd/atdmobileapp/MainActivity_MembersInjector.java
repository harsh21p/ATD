// Generated by Dagger (https://dagger.dev).
package com.atd.atdmobileapp;

import com.atd.atdmobileapp.utils.FirestoreRepository;
import com.atd.atdmobileapp.utils.SharedPrefManager;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<SharedPrefManager> sharedPrefManagerProvider;

  private final Provider<FirestoreRepository> firestoreRepositoryProvider;

  public MainActivity_MembersInjector(Provider<SharedPrefManager> sharedPrefManagerProvider,
      Provider<FirestoreRepository> firestoreRepositoryProvider) {
    this.sharedPrefManagerProvider = sharedPrefManagerProvider;
    this.firestoreRepositoryProvider = firestoreRepositoryProvider;
  }

  public static MembersInjector<MainActivity> create(
      Provider<SharedPrefManager> sharedPrefManagerProvider,
      Provider<FirestoreRepository> firestoreRepositoryProvider) {
    return new MainActivity_MembersInjector(sharedPrefManagerProvider, firestoreRepositoryProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectSharedPrefManager(instance, sharedPrefManagerProvider.get());
    injectFirestoreRepository(instance, firestoreRepositoryProvider.get());
  }

  @InjectedFieldSignature("com.atd.atdmobileapp.MainActivity.sharedPrefManager")
  public static void injectSharedPrefManager(MainActivity instance,
      SharedPrefManager sharedPrefManager) {
    instance.sharedPrefManager = sharedPrefManager;
  }

  @InjectedFieldSignature("com.atd.atdmobileapp.MainActivity.firestoreRepository")
  public static void injectFirestoreRepository(MainActivity instance,
      FirestoreRepository firestoreRepository) {
    instance.firestoreRepository = firestoreRepository;
  }
}
