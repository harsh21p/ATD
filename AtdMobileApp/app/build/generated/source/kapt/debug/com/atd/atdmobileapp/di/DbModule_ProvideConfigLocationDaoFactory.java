// Generated by Dagger (https://dagger.dev).
package com.atd.atdmobileapp.di;

import com.atd.atdmobileapp.roomdatabase.ATDRoomDatabase;
import com.atd.atdmobileapp.roomdatabase.configlocations.ConfigLocationsDAO;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DbModule_ProvideConfigLocationDaoFactory implements Factory<ConfigLocationsDAO> {
  private final Provider<ATDRoomDatabase> dbProvider;

  public DbModule_ProvideConfigLocationDaoFactory(Provider<ATDRoomDatabase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public ConfigLocationsDAO get() {
    return provideConfigLocationDao(dbProvider.get());
  }

  public static DbModule_ProvideConfigLocationDaoFactory create(
      Provider<ATDRoomDatabase> dbProvider) {
    return new DbModule_ProvideConfigLocationDaoFactory(dbProvider);
  }

  public static ConfigLocationsDAO provideConfigLocationDao(ATDRoomDatabase db) {
    return Preconditions.checkNotNullFromProvides(DbModule.INSTANCE.provideConfigLocationDao(db));
  }
}
