// Generated by Dagger (https://dagger.dev).
package com.atd.atdmobileapp.ui.cart.checkout;

import com.atd.atdmobileapp.repository.MyOrderRepository;
import com.atd.atdmobileapp.utils.FirestoreRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CheckoutViewModel_Factory implements Factory<CheckoutViewModel> {
  private final Provider<MyOrderRepository> myOrderRepositoryProvider;

  private final Provider<FirestoreRepository> firestoreRepositoryProvider;

  public CheckoutViewModel_Factory(Provider<MyOrderRepository> myOrderRepositoryProvider,
      Provider<FirestoreRepository> firestoreRepositoryProvider) {
    this.myOrderRepositoryProvider = myOrderRepositoryProvider;
    this.firestoreRepositoryProvider = firestoreRepositoryProvider;
  }

  @Override
  public CheckoutViewModel get() {
    return newInstance(myOrderRepositoryProvider.get(), firestoreRepositoryProvider.get());
  }

  public static CheckoutViewModel_Factory create(
      Provider<MyOrderRepository> myOrderRepositoryProvider,
      Provider<FirestoreRepository> firestoreRepositoryProvider) {
    return new CheckoutViewModel_Factory(myOrderRepositoryProvider, firestoreRepositoryProvider);
  }

  public static CheckoutViewModel newInstance(MyOrderRepository myOrderRepository,
      FirestoreRepository firestoreRepository) {
    return new CheckoutViewModel(myOrderRepository, firestoreRepository);
  }
}
