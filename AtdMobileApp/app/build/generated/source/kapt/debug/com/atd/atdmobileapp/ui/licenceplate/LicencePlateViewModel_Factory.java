// Generated by Dagger (https://dagger.dev).
package com.atd.atdmobileapp.ui.licenceplate;

import com.atd.atdmobileapp.repository.VehiclesRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LicencePlateViewModel_Factory implements Factory<LicencePlateViewModel> {
  private final Provider<VehiclesRepository> vehiclesRepositoryProvider;

  public LicencePlateViewModel_Factory(Provider<VehiclesRepository> vehiclesRepositoryProvider) {
    this.vehiclesRepositoryProvider = vehiclesRepositoryProvider;
  }

  @Override
  public LicencePlateViewModel get() {
    return newInstance(vehiclesRepositoryProvider.get());
  }

  public static LicencePlateViewModel_Factory create(
      Provider<VehiclesRepository> vehiclesRepositoryProvider) {
    return new LicencePlateViewModel_Factory(vehiclesRepositoryProvider);
  }

  public static LicencePlateViewModel newInstance(VehiclesRepository vehiclesRepository) {
    return new LicencePlateViewModel(vehiclesRepository);
  }
}
