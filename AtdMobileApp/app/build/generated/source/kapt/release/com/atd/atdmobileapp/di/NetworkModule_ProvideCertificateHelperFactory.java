// Generated by Dagger (https://dagger.dev).
package com.atd.atdmobileapp.di;

import android.content.Context;
import com.atd.atdmobileapp.utils.CertificateHelper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideCertificateHelperFactory implements Factory<CertificateHelper> {
  private final NetworkModule module;

  private final Provider<Context> contextProvider;

  public NetworkModule_ProvideCertificateHelperFactory(NetworkModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public CertificateHelper get() {
    return provideCertificateHelper(module, contextProvider.get());
  }

  public static NetworkModule_ProvideCertificateHelperFactory create(NetworkModule module,
      Provider<Context> contextProvider) {
    return new NetworkModule_ProvideCertificateHelperFactory(module, contextProvider);
  }

  public static CertificateHelper provideCertificateHelper(NetworkModule instance,
      Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideCertificateHelper(context));
  }
}
