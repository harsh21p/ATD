// Generated by Dagger (https://dagger.dev).
package com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myorders.myorderdetails;

import com.atd.atdmobileapp.api.OrderApi;
import com.atd.atdmobileapp.utils.SharedPrefManager;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MyOrderDetailsFragment_MembersInjector implements MembersInjector<MyOrderDetailsFragment> {
  private final Provider<SharedPrefManager> sharedPrefManagerProvider;

  private final Provider<OrderApi> myOrderApiProvider;

  public MyOrderDetailsFragment_MembersInjector(
      Provider<SharedPrefManager> sharedPrefManagerProvider,
      Provider<OrderApi> myOrderApiProvider) {
    this.sharedPrefManagerProvider = sharedPrefManagerProvider;
    this.myOrderApiProvider = myOrderApiProvider;
  }

  public static MembersInjector<MyOrderDetailsFragment> create(
      Provider<SharedPrefManager> sharedPrefManagerProvider,
      Provider<OrderApi> myOrderApiProvider) {
    return new MyOrderDetailsFragment_MembersInjector(sharedPrefManagerProvider, myOrderApiProvider);
  }

  @Override
  public void injectMembers(MyOrderDetailsFragment instance) {
    injectSharedPrefManager(instance, sharedPrefManagerProvider.get());
    injectMyOrderApi(instance, myOrderApiProvider.get());
  }

  @InjectedFieldSignature("com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myorders.myorderdetails.MyOrderDetailsFragment.sharedPrefManager")
  public static void injectSharedPrefManager(MyOrderDetailsFragment instance,
      SharedPrefManager sharedPrefManager) {
    instance.sharedPrefManager = sharedPrefManager;
  }

  @InjectedFieldSignature("com.atd.atdmobileapp.ui.bottomnavigation.homescreen.myorders.myorderdetails.MyOrderDetailsFragment.myOrderApi")
  public static void injectMyOrderApi(MyOrderDetailsFragment instance, OrderApi myOrderApi) {
    instance.myOrderApi = myOrderApi;
  }
}
