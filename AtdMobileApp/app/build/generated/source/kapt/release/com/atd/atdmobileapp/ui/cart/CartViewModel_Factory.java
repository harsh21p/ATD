// Generated by Dagger (https://dagger.dev).
package com.atd.atdmobileapp.ui.cart;

import com.atd.atdmobileapp.repository.MyOrderRepository;
import com.atd.atdmobileapp.utils.FirestoreRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CartViewModel_Factory implements Factory<CartViewModel> {
  private final Provider<FirestoreRepository> firestoreRepositoryProvider;

  private final Provider<MyOrderRepository> orderRepositoryProvider;

  public CartViewModel_Factory(Provider<FirestoreRepository> firestoreRepositoryProvider,
      Provider<MyOrderRepository> orderRepositoryProvider) {
    this.firestoreRepositoryProvider = firestoreRepositoryProvider;
    this.orderRepositoryProvider = orderRepositoryProvider;
  }

  @Override
  public CartViewModel get() {
    return newInstance(firestoreRepositoryProvider.get(), orderRepositoryProvider.get());
  }

  public static CartViewModel_Factory create(
      Provider<FirestoreRepository> firestoreRepositoryProvider,
      Provider<MyOrderRepository> orderRepositoryProvider) {
    return new CartViewModel_Factory(firestoreRepositoryProvider, orderRepositoryProvider);
  }

  public static CartViewModel newInstance(FirestoreRepository firestoreRepository,
      MyOrderRepository orderRepository) {
    return new CartViewModel(firestoreRepository, orderRepository);
  }
}
