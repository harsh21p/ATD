// Generated by Dagger (https://dagger.dev).
package com.atd.atdmobileapp.ui.login;

import com.atd.atdmobileapp.repository.PermissionsRepository;
import com.atd.atdmobileapp.repository.UserRepository;
import com.atd.atdmobileapp.roomdatabase.ATDRoomDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginViewModel_Factory implements Factory<LoginViewModel> {
  private final Provider<UserRepository> userRepositoryProvider;

  private final Provider<PermissionsRepository> permissionsRepositoryProvider;

  private final Provider<ATDRoomDatabase> atdRoomDatabaseProvider;

  public LoginViewModel_Factory(Provider<UserRepository> userRepositoryProvider,
      Provider<PermissionsRepository> permissionsRepositoryProvider,
      Provider<ATDRoomDatabase> atdRoomDatabaseProvider) {
    this.userRepositoryProvider = userRepositoryProvider;
    this.permissionsRepositoryProvider = permissionsRepositoryProvider;
    this.atdRoomDatabaseProvider = atdRoomDatabaseProvider;
  }

  @Override
  public LoginViewModel get() {
    return newInstance(userRepositoryProvider.get(), permissionsRepositoryProvider.get(), atdRoomDatabaseProvider.get());
  }

  public static LoginViewModel_Factory create(Provider<UserRepository> userRepositoryProvider,
      Provider<PermissionsRepository> permissionsRepositoryProvider,
      Provider<ATDRoomDatabase> atdRoomDatabaseProvider) {
    return new LoginViewModel_Factory(userRepositoryProvider, permissionsRepositoryProvider, atdRoomDatabaseProvider);
  }

  public static LoginViewModel newInstance(UserRepository userRepository,
      PermissionsRepository permissionsRepository, ATDRoomDatabase atdRoomDatabase) {
    return new LoginViewModel(userRepository, permissionsRepository, atdRoomDatabase);
  }
}
